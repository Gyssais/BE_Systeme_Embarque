ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"US_40kHz.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.US_40kHz_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	US_40kHz_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	US_40kHz_Enable, %function
  24              	US_40kHz_Enable:
  25              	.LFB2:
  26              		.file 1 "Generated_Source\\PSoC5\\US_40kHz.c"
   1:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/US_40kHz.c **** * File Name: US_40kHz.c
   3:Generated_Source\PSoC5/US_40kHz.c **** * Version 3.30
   4:Generated_Source\PSoC5/US_40kHz.c **** *
   5:Generated_Source\PSoC5/US_40kHz.c **** * Description:
   6:Generated_Source\PSoC5/US_40kHz.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/US_40kHz.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/US_40kHz.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/US_40kHz.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/US_40kHz.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/US_40kHz.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/US_40kHz.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/US_40kHz.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/US_40kHz.c **** *
  15:Generated_Source\PSoC5/US_40kHz.c **** * Note:
  16:Generated_Source\PSoC5/US_40kHz.c **** *
  17:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************
  18:Generated_Source\PSoC5/US_40kHz.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/US_40kHz.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/US_40kHz.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/US_40kHz.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/US_40kHz.c **** 
  24:Generated_Source\PSoC5/US_40kHz.c **** #include "US_40kHz.h"
  25:Generated_Source\PSoC5/US_40kHz.c **** 
  26:Generated_Source\PSoC5/US_40kHz.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/US_40kHz.c **** #ifdef US_40kHz_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/US_40kHz.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/US_40kHz.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/US_40kHz.c **** #endif /* US_40kHz_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/US_40kHz.c **** 
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 2


  32:Generated_Source\PSoC5/US_40kHz.c **** uint8 US_40kHz_initVar = 0u;
  33:Generated_Source\PSoC5/US_40kHz.c **** 
  34:Generated_Source\PSoC5/US_40kHz.c **** 
  35:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/US_40kHz.c **** * Function Name: US_40kHz_Start
  37:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************
  38:Generated_Source\PSoC5/US_40kHz.c **** *
  39:Generated_Source\PSoC5/US_40kHz.c **** * Summary:
  40:Generated_Source\PSoC5/US_40kHz.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/US_40kHz.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/US_40kHz.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/US_40kHz.c **** *
  44:Generated_Source\PSoC5/US_40kHz.c **** * Parameters:
  45:Generated_Source\PSoC5/US_40kHz.c **** *  None
  46:Generated_Source\PSoC5/US_40kHz.c **** *
  47:Generated_Source\PSoC5/US_40kHz.c **** * Return:
  48:Generated_Source\PSoC5/US_40kHz.c **** *  None
  49:Generated_Source\PSoC5/US_40kHz.c **** *
  50:Generated_Source\PSoC5/US_40kHz.c **** * Global variables:
  51:Generated_Source\PSoC5/US_40kHz.c **** *  US_40kHz_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/US_40kHz.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/US_40kHz.c **** *
  54:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/US_40kHz.c **** void US_40kHz_Start(void) 
  56:Generated_Source\PSoC5/US_40kHz.c **** {
  57:Generated_Source\PSoC5/US_40kHz.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/US_40kHz.c ****     if(US_40kHz_initVar == 0u)
  59:Generated_Source\PSoC5/US_40kHz.c ****     {
  60:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_Init();
  61:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_initVar = 1u;
  62:Generated_Source\PSoC5/US_40kHz.c ****     }
  63:Generated_Source\PSoC5/US_40kHz.c ****     US_40kHz_Enable();
  64:Generated_Source\PSoC5/US_40kHz.c **** 
  65:Generated_Source\PSoC5/US_40kHz.c **** }
  66:Generated_Source\PSoC5/US_40kHz.c **** 
  67:Generated_Source\PSoC5/US_40kHz.c **** 
  68:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/US_40kHz.c **** * Function Name: US_40kHz_Init
  70:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************
  71:Generated_Source\PSoC5/US_40kHz.c **** *
  72:Generated_Source\PSoC5/US_40kHz.c **** * Summary:
  73:Generated_Source\PSoC5/US_40kHz.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/US_40kHz.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/US_40kHz.c **** *  US_40kHz_Start().
  76:Generated_Source\PSoC5/US_40kHz.c **** *
  77:Generated_Source\PSoC5/US_40kHz.c **** * Parameters:
  78:Generated_Source\PSoC5/US_40kHz.c **** *  None
  79:Generated_Source\PSoC5/US_40kHz.c **** *
  80:Generated_Source\PSoC5/US_40kHz.c **** * Return:
  81:Generated_Source\PSoC5/US_40kHz.c **** *  None
  82:Generated_Source\PSoC5/US_40kHz.c **** *
  83:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/US_40kHz.c **** void US_40kHz_Init(void) 
  85:Generated_Source\PSoC5/US_40kHz.c **** {
  86:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UsingFixedFunction || US_40kHz_UseControl)
  87:Generated_Source\PSoC5/US_40kHz.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction || US_40kHz_UseControl) */
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 3


  89:Generated_Source\PSoC5/US_40kHz.c **** 
  90:Generated_Source\PSoC5/US_40kHz.c ****     #if(!US_40kHz_UsingFixedFunction)
  91:Generated_Source\PSoC5/US_40kHz.c ****         #if(US_40kHz_UseStatus)
  92:Generated_Source\PSoC5/US_40kHz.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/US_40kHz.c ****             uint8 US_40kHz_interruptState;
  94:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UseStatus) */
  95:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (!US_40kHz_UsingFixedFunction) */
  96:Generated_Source\PSoC5/US_40kHz.c **** 
  97:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UsingFixedFunction)
  98:Generated_Source\PSoC5/US_40kHz.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_CONTROL |= US_40kHz_CFG0_MODE;
 100:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_DeadBand2_4)
 101:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_CONTROL |= US_40kHz_CFG0_DB;
 102:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_DeadBand2_4) */
 103:Generated_Source\PSoC5/US_40kHz.c **** 
 104:Generated_Source\PSoC5/US_40kHz.c ****         ctrl = US_40kHz_CONTROL3 & ((uint8 )(~US_40kHz_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_CONTROL3 = ctrl | US_40kHz_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/US_40kHz.c **** 
 107:Generated_Source\PSoC5/US_40kHz.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_RT1 &= ((uint8)(~US_40kHz_RT1_MASK));
 109:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_RT1 |= US_40kHz_SYNC;
 110:Generated_Source\PSoC5/US_40kHz.c **** 
 111:Generated_Source\PSoC5/US_40kHz.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_RT1 &= ((uint8)(~US_40kHz_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_RT1 |= US_40kHz_SYNCDSI_EN;
 114:Generated_Source\PSoC5/US_40kHz.c **** 
 115:Generated_Source\PSoC5/US_40kHz.c ****     #elif (US_40kHz_UseControl)
 116:Generated_Source\PSoC5/US_40kHz.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/US_40kHz.c ****         ctrl = US_40kHz_CONTROL & ((uint8)(~US_40kHz_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/US_40kHz.c ****                 ((uint8)(~US_40kHz_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_CONTROL = ctrl | US_40kHz_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/US_40kHz.c ****                                    US_40kHz_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction) */
 122:Generated_Source\PSoC5/US_40kHz.c **** 
 123:Generated_Source\PSoC5/US_40kHz.c ****     #if (!US_40kHz_UsingFixedFunction)
 124:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_Resolution == 8)
 125:Generated_Source\PSoC5/US_40kHz.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_AUX_CONTROLDP0 |= (US_40kHz_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/US_40kHz.c ****         #else /* (US_40kHz_Resolution == 16)*/
 128:Generated_Source\PSoC5/US_40kHz.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_AUX_CONTROLDP0 |= (US_40kHz_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_AUX_CONTROLDP1 |= (US_40kHz_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_Resolution == 8) */
 132:Generated_Source\PSoC5/US_40kHz.c **** 
 133:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_WriteCounter(US_40kHz_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (!US_40kHz_UsingFixedFunction) */
 135:Generated_Source\PSoC5/US_40kHz.c **** 
 136:Generated_Source\PSoC5/US_40kHz.c ****     US_40kHz_WritePeriod(US_40kHz_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/US_40kHz.c **** 
 138:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_UseOneCompareMode)
 139:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_WriteCompare(US_40kHz_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/US_40kHz.c ****         #else
 141:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_WriteCompare1(US_40kHz_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_WriteCompare2(US_40kHz_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UseOneCompareMode) */
 144:Generated_Source\PSoC5/US_40kHz.c **** 
 145:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_KillModeMinTime)
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 4


 146:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_WriteKillTime(US_40kHz_MinimumKillTime);
 147:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_KillModeMinTime) */
 148:Generated_Source\PSoC5/US_40kHz.c **** 
 149:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_DeadBandUsed)
 150:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_WriteDeadTime(US_40kHz_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_DeadBandUsed) */
 152:Generated_Source\PSoC5/US_40kHz.c **** 
 153:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UseStatus || US_40kHz_UsingFixedFunction)
 154:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_SetInterruptMode(US_40kHz_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UseStatus || US_40kHz_UsingFixedFunction) */
 156:Generated_Source\PSoC5/US_40kHz.c **** 
 157:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UsingFixedFunction)
 158:Generated_Source\PSoC5/US_40kHz.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_GLOBAL_ENABLE |= US_40kHz_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/US_40kHz.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_CONTROL2 |= US_40kHz_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/US_40kHz.c ****     #else
 163:Generated_Source\PSoC5/US_40kHz.c ****         #if(US_40kHz_UseStatus)
 164:Generated_Source\PSoC5/US_40kHz.c **** 
 165:Generated_Source\PSoC5/US_40kHz.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/US_40kHz.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/US_40kHz.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_STATUS_AUX_CTRL |= US_40kHz_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/US_40kHz.c **** 
 171:Generated_Source\PSoC5/US_40kHz.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/US_40kHz.c ****             CyExitCriticalSection(US_40kHz_interruptState);
 173:Generated_Source\PSoC5/US_40kHz.c **** 
 174:Generated_Source\PSoC5/US_40kHz.c ****             /* Clear the FIFO to enable the US_40kHz_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/US_40kHz.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_ClearFIFO();
 177:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UseStatus) */
 178:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction) */
 179:Generated_Source\PSoC5/US_40kHz.c **** }
 180:Generated_Source\PSoC5/US_40kHz.c **** 
 181:Generated_Source\PSoC5/US_40kHz.c **** 
 182:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/US_40kHz.c **** * Function Name: US_40kHz_Enable
 184:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************
 185:Generated_Source\PSoC5/US_40kHz.c **** *
 186:Generated_Source\PSoC5/US_40kHz.c **** * Summary:
 187:Generated_Source\PSoC5/US_40kHz.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/US_40kHz.c **** *
 189:Generated_Source\PSoC5/US_40kHz.c **** * Parameters:
 190:Generated_Source\PSoC5/US_40kHz.c **** *  None
 191:Generated_Source\PSoC5/US_40kHz.c **** *
 192:Generated_Source\PSoC5/US_40kHz.c **** * Return:
 193:Generated_Source\PSoC5/US_40kHz.c **** *  None
 194:Generated_Source\PSoC5/US_40kHz.c **** *
 195:Generated_Source\PSoC5/US_40kHz.c **** * Side Effects:
 196:Generated_Source\PSoC5/US_40kHz.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/US_40kHz.c **** *
 198:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/US_40kHz.c **** void US_40kHz_Enable(void) 
 200:Generated_Source\PSoC5/US_40kHz.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE2:
  35              		.size	US_40kHz_Enable, .-US_40kHz_Enable
  36 0002 00BF     		.section	.text.US_40kHz_Stop,"ax",%progbits
  37              		.align	2
  38              		.global	US_40kHz_Stop
  39              		.thumb
  40              		.thumb_func
  41              		.type	US_40kHz_Stop, %function
  42              	US_40kHz_Stop:
  43              	.LFB3:
 201:Generated_Source\PSoC5/US_40kHz.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UsingFixedFunction)
 203:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_GLOBAL_ENABLE |= US_40kHz_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_GLOBAL_STBY_ENABLE |= US_40kHz_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction) */
 206:Generated_Source\PSoC5/US_40kHz.c **** 
 207:Generated_Source\PSoC5/US_40kHz.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UseControl || US_40kHz_UsingFixedFunction)
 209:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_CONTROL |= US_40kHz_CTRL_ENABLE;
 210:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UseControl || US_40kHz_UsingFixedFunction) */
 211:Generated_Source\PSoC5/US_40kHz.c **** }
 212:Generated_Source\PSoC5/US_40kHz.c **** 
 213:Generated_Source\PSoC5/US_40kHz.c **** 
 214:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/US_40kHz.c **** * Function Name: US_40kHz_Stop
 216:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************
 217:Generated_Source\PSoC5/US_40kHz.c **** *
 218:Generated_Source\PSoC5/US_40kHz.c **** * Summary:
 219:Generated_Source\PSoC5/US_40kHz.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/US_40kHz.c **** *  interrupts.
 221:Generated_Source\PSoC5/US_40kHz.c **** *
 222:Generated_Source\PSoC5/US_40kHz.c **** * Parameters:
 223:Generated_Source\PSoC5/US_40kHz.c **** *  None
 224:Generated_Source\PSoC5/US_40kHz.c **** *
 225:Generated_Source\PSoC5/US_40kHz.c **** * Return:
 226:Generated_Source\PSoC5/US_40kHz.c **** *  None
 227:Generated_Source\PSoC5/US_40kHz.c **** *
 228:Generated_Source\PSoC5/US_40kHz.c **** * Side Effects:
 229:Generated_Source\PSoC5/US_40kHz.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/US_40kHz.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/US_40kHz.c **** *
 232:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/US_40kHz.c **** void US_40kHz_Stop(void) 
 234:Generated_Source\PSoC5/US_40kHz.c **** {
  44              		.loc 1 234 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48              		@ link register save eliminated.
  49 0000 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE3:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 6


  52              		.size	US_40kHz_Stop, .-US_40kHz_Stop
  53 0002 00BF     		.section	.text.US_40kHz_WriteCounter,"ax",%progbits
  54              		.align	2
  55              		.global	US_40kHz_WriteCounter
  56              		.thumb
  57              		.thumb_func
  58              		.type	US_40kHz_WriteCounter, %function
  59              	US_40kHz_WriteCounter:
  60              	.LFB4:
 235:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UseControl || US_40kHz_UsingFixedFunction)
 236:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_CONTROL &= ((uint8)(~US_40kHz_CTRL_ENABLE));
 237:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UseControl || US_40kHz_UsingFixedFunction) */
 238:Generated_Source\PSoC5/US_40kHz.c **** 
 239:Generated_Source\PSoC5/US_40kHz.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UsingFixedFunction)
 241:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_GLOBAL_ENABLE &= ((uint8)(~US_40kHz_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_GLOBAL_STBY_ENABLE &= ((uint8)(~US_40kHz_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction) */
 244:Generated_Source\PSoC5/US_40kHz.c **** }
 245:Generated_Source\PSoC5/US_40kHz.c **** 
 246:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_UseOneCompareMode)
 247:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_CompareMode1SW)
 248:Generated_Source\PSoC5/US_40kHz.c **** 
 249:Generated_Source\PSoC5/US_40kHz.c **** 
 250:Generated_Source\PSoC5/US_40kHz.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/US_40kHz.c ****         * Function Name: US_40kHz_SetCompareMode
 252:Generated_Source\PSoC5/US_40kHz.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/US_40kHz.c ****         *
 254:Generated_Source\PSoC5/US_40kHz.c ****         * Summary:
 255:Generated_Source\PSoC5/US_40kHz.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/US_40kHz.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/US_40kHz.c ****         *
 258:Generated_Source\PSoC5/US_40kHz.c ****         * Parameters:
 259:Generated_Source\PSoC5/US_40kHz.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/US_40kHz.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/US_40kHz.c ****         *
 262:Generated_Source\PSoC5/US_40kHz.c ****         * Return:
 263:Generated_Source\PSoC5/US_40kHz.c ****         *  None
 264:Generated_Source\PSoC5/US_40kHz.c ****         *
 265:Generated_Source\PSoC5/US_40kHz.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/US_40kHz.c ****         void US_40kHz_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/US_40kHz.c ****         {
 268:Generated_Source\PSoC5/US_40kHz.c ****             #if(US_40kHz_UsingFixedFunction)
 269:Generated_Source\PSoC5/US_40kHz.c **** 
 270:Generated_Source\PSoC5/US_40kHz.c ****                 #if(0 != US_40kHz_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/US_40kHz.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << US_40kHz_CTRL_CMPMODE1
 272:Generated_Source\PSoC5/US_40kHz.c ****                 #else
 273:Generated_Source\PSoC5/US_40kHz.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/US_40kHz.c ****                 #endif /* (0 != US_40kHz_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/US_40kHz.c **** 
 276:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_CONTROL3 &= ((uint8)(~US_40kHz_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/US_40kHz.c **** 
 279:Generated_Source\PSoC5/US_40kHz.c ****             #elif (US_40kHz_UseControl)
 280:Generated_Source\PSoC5/US_40kHz.c **** 
 281:Generated_Source\PSoC5/US_40kHz.c ****                 #if(0 != US_40kHz_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/US_40kHz.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << US_40kHz_CTRL_CMPMODE
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 7


 283:Generated_Source\PSoC5/US_40kHz.c ****                                                 US_40kHz_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/US_40kHz.c ****                 #else
 285:Generated_Source\PSoC5/US_40kHz.c ****                     uint8 comparemode1masked = comparemode & US_40kHz_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/US_40kHz.c ****                 #endif /* (0 != US_40kHz_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/US_40kHz.c **** 
 288:Generated_Source\PSoC5/US_40kHz.c ****                 #if(0 != US_40kHz_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/US_40kHz.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << US_40kHz_CTRL_CMPMODE
 290:Generated_Source\PSoC5/US_40kHz.c ****                                                US_40kHz_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/US_40kHz.c ****                 #else
 292:Generated_Source\PSoC5/US_40kHz.c ****                     uint8 comparemode2masked = comparemode & US_40kHz_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/US_40kHz.c ****                 #endif /* (0 != US_40kHz_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/US_40kHz.c **** 
 295:Generated_Source\PSoC5/US_40kHz.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_CONTROL &= ((uint8)(~(US_40kHz_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/US_40kHz.c ****                                             US_40kHz_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/US_40kHz.c **** 
 300:Generated_Source\PSoC5/US_40kHz.c ****             #else
 301:Generated_Source\PSoC5/US_40kHz.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/US_40kHz.c ****             #endif /* (US_40kHz_UsingFixedFunction) */
 303:Generated_Source\PSoC5/US_40kHz.c ****         }
 304:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* US_40kHz_CompareMode1SW */
 305:Generated_Source\PSoC5/US_40kHz.c **** 
 306:Generated_Source\PSoC5/US_40kHz.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/US_40kHz.c **** 
 308:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_CompareMode1SW)
 309:Generated_Source\PSoC5/US_40kHz.c **** 
 310:Generated_Source\PSoC5/US_40kHz.c **** 
 311:Generated_Source\PSoC5/US_40kHz.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/US_40kHz.c ****         * Function Name: US_40kHz_SetCompareMode1
 313:Generated_Source\PSoC5/US_40kHz.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/US_40kHz.c ****         *
 315:Generated_Source\PSoC5/US_40kHz.c ****         * Summary:
 316:Generated_Source\PSoC5/US_40kHz.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/US_40kHz.c ****         *
 318:Generated_Source\PSoC5/US_40kHz.c ****         * Parameters:
 319:Generated_Source\PSoC5/US_40kHz.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/US_40kHz.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/US_40kHz.c ****         *
 322:Generated_Source\PSoC5/US_40kHz.c ****         * Return:
 323:Generated_Source\PSoC5/US_40kHz.c ****         *  None
 324:Generated_Source\PSoC5/US_40kHz.c ****         *
 325:Generated_Source\PSoC5/US_40kHz.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/US_40kHz.c ****         void US_40kHz_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/US_40kHz.c ****         {
 328:Generated_Source\PSoC5/US_40kHz.c ****             #if(0 != US_40kHz_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/US_40kHz.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << US_40kHz_CTRL_CMPMODE1_SHI
 330:Generated_Source\PSoC5/US_40kHz.c ****                                            US_40kHz_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/US_40kHz.c ****             #else
 332:Generated_Source\PSoC5/US_40kHz.c ****                 uint8 comparemodemasked = comparemode & US_40kHz_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/US_40kHz.c ****             #endif /* (0 != US_40kHz_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/US_40kHz.c **** 
 335:Generated_Source\PSoC5/US_40kHz.c ****             #if (US_40kHz_UseControl)
 336:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_CONTROL &= ((uint8)(~US_40kHz_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/US_40kHz.c ****             #endif /* (US_40kHz_UseControl) */
 339:Generated_Source\PSoC5/US_40kHz.c ****         }
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 8


 340:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* US_40kHz_CompareMode1SW */
 341:Generated_Source\PSoC5/US_40kHz.c **** 
 342:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_CompareMode2SW)
 343:Generated_Source\PSoC5/US_40kHz.c **** 
 344:Generated_Source\PSoC5/US_40kHz.c **** 
 345:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_SetCompareMode2
 347:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/US_40kHz.c ****     *
 349:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 350:Generated_Source\PSoC5/US_40kHz.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/US_40kHz.c ****     *
 352:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 353:Generated_Source\PSoC5/US_40kHz.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/US_40kHz.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/US_40kHz.c ****     *
 356:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 357:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 358:Generated_Source\PSoC5/US_40kHz.c ****     *
 359:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/US_40kHz.c ****     {
 362:Generated_Source\PSoC5/US_40kHz.c **** 
 363:Generated_Source\PSoC5/US_40kHz.c ****         #if(0 != US_40kHz_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/US_40kHz.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << US_40kHz_CTRL_CMPMODE2_SHIFT))
 365:Generated_Source\PSoC5/US_40kHz.c ****                                                  US_40kHz_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/US_40kHz.c ****         #else
 367:Generated_Source\PSoC5/US_40kHz.c ****             uint8 comparemodemasked = comparemode & US_40kHz_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (0 != US_40kHz_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/US_40kHz.c **** 
 370:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_UseControl)
 371:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_CONTROL &= ((uint8)(~US_40kHz_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UseControl) */
 374:Generated_Source\PSoC5/US_40kHz.c ****     }
 375:Generated_Source\PSoC5/US_40kHz.c ****     #endif /*US_40kHz_CompareMode2SW */
 376:Generated_Source\PSoC5/US_40kHz.c **** 
 377:Generated_Source\PSoC5/US_40kHz.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/US_40kHz.c **** 
 379:Generated_Source\PSoC5/US_40kHz.c **** 
 380:Generated_Source\PSoC5/US_40kHz.c **** #if (!US_40kHz_UsingFixedFunction)
 381:Generated_Source\PSoC5/US_40kHz.c **** 
 382:Generated_Source\PSoC5/US_40kHz.c **** 
 383:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_WriteCounter
 385:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/US_40kHz.c ****     *
 387:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 388:Generated_Source\PSoC5/US_40kHz.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/US_40kHz.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/US_40kHz.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/US_40kHz.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/US_40kHz.c ****     *
 393:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 394:Generated_Source\PSoC5/US_40kHz.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/US_40kHz.c ****     *
 396:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 9


 397:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 398:Generated_Source\PSoC5/US_40kHz.c ****     *
 399:Generated_Source\PSoC5/US_40kHz.c ****     * Side Effects:
 400:Generated_Source\PSoC5/US_40kHz.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/US_40kHz.c ****     *
 402:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/US_40kHz.c ****                                        
 405:Generated_Source\PSoC5/US_40kHz.c ****     {
  61              		.loc 1 405 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL0:
 406:Generated_Source\PSoC5/US_40kHz.c ****         CY_SET_REG16(US_40kHz_COUNTER_LSB_PTR, counter);
  67              		.loc 1 406 0
  68 0000 014B     		ldr	r3, .L4
  69 0002 1880     		strh	r0, [r3]	@ movhi
  70 0004 7047     		bx	lr
  71              	.L5:
  72 0006 00BF     		.align	2
  73              	.L4:
  74 0008 08680040 		.word	1073768456
  75              		.cfi_endproc
  76              	.LFE4:
  77              		.size	US_40kHz_WriteCounter, .-US_40kHz_WriteCounter
  78              		.section	.text.US_40kHz_ReadCounter,"ax",%progbits
  79              		.align	2
  80              		.global	US_40kHz_ReadCounter
  81              		.thumb
  82              		.thumb_func
  83              		.type	US_40kHz_ReadCounter, %function
  84              	US_40kHz_ReadCounter:
  85              	.LFB5:
 407:Generated_Source\PSoC5/US_40kHz.c ****     }
 408:Generated_Source\PSoC5/US_40kHz.c **** 
 409:Generated_Source\PSoC5/US_40kHz.c **** 
 410:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadCounter
 412:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/US_40kHz.c ****     *
 414:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 415:Generated_Source\PSoC5/US_40kHz.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/US_40kHz.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/US_40kHz.c ****     *
 418:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 419:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 420:Generated_Source\PSoC5/US_40kHz.c ****     *
 421:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 422:Generated_Source\PSoC5/US_40kHz.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/US_40kHz.c ****     *
 424:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/US_40kHz.c ****     uint16 US_40kHz_ReadCounter(void) 
 426:Generated_Source\PSoC5/US_40kHz.c ****     {
  86              		.loc 1 426 0
  87              		.cfi_startproc
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 10


  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
 427:Generated_Source\PSoC5/US_40kHz.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/US_40kHz.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/US_40kHz.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/US_40kHz.c ****           (void)CY_GET_REG8(US_40kHz_COUNTERCAP_LSB_PTR_8BIT);
  91              		.loc 1 430 0
  92 0000 024B     		ldr	r3, .L7
  93 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/US_40kHz.c **** 
 432:Generated_Source\PSoC5/US_40kHz.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/US_40kHz.c ****         return (CY_GET_REG16(US_40kHz_CAPTURE_LSB_PTR));
  94              		.loc 1 433 0
  95 0004 024B     		ldr	r3, .L7+4
  96 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/US_40kHz.c ****     }
  97              		.loc 1 434 0
  98 0008 80B2     		uxth	r0, r0
  99 000a 7047     		bx	lr
 100              	.L8:
 101              		.align	2
 102              	.L7:
 103 000c 14640040 		.word	1073767444
 104 0010 A8680040 		.word	1073768616
 105              		.cfi_endproc
 106              	.LFE5:
 107              		.size	US_40kHz_ReadCounter, .-US_40kHz_ReadCounter
 108              		.section	.text.US_40kHz_WritePeriod,"ax",%progbits
 109              		.align	2
 110              		.global	US_40kHz_WritePeriod
 111              		.thumb
 112              		.thumb_func
 113              		.type	US_40kHz_WritePeriod, %function
 114              	US_40kHz_WritePeriod:
 115              	.LFB7:
 435:Generated_Source\PSoC5/US_40kHz.c **** 
 436:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UseStatus)
 437:Generated_Source\PSoC5/US_40kHz.c **** 
 438:Generated_Source\PSoC5/US_40kHz.c **** 
 439:Generated_Source\PSoC5/US_40kHz.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/US_40kHz.c ****         * Function Name: US_40kHz_ClearFIFO
 441:Generated_Source\PSoC5/US_40kHz.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/US_40kHz.c ****         *
 443:Generated_Source\PSoC5/US_40kHz.c ****         * Summary:
 444:Generated_Source\PSoC5/US_40kHz.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/US_40kHz.c ****         *
 446:Generated_Source\PSoC5/US_40kHz.c ****         * Parameters:
 447:Generated_Source\PSoC5/US_40kHz.c ****         *  None
 448:Generated_Source\PSoC5/US_40kHz.c ****         *
 449:Generated_Source\PSoC5/US_40kHz.c ****         * Return:
 450:Generated_Source\PSoC5/US_40kHz.c ****         *  None
 451:Generated_Source\PSoC5/US_40kHz.c ****         *
 452:Generated_Source\PSoC5/US_40kHz.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/US_40kHz.c ****         void US_40kHz_ClearFIFO(void) 
 454:Generated_Source\PSoC5/US_40kHz.c ****         {
 455:Generated_Source\PSoC5/US_40kHz.c ****             while(0u != (US_40kHz_ReadStatusRegister() & US_40kHz_STATUS_FIFONEMPTY))
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 11


 456:Generated_Source\PSoC5/US_40kHz.c ****             {
 457:Generated_Source\PSoC5/US_40kHz.c ****                 (void)US_40kHz_ReadCapture();
 458:Generated_Source\PSoC5/US_40kHz.c ****             }
 459:Generated_Source\PSoC5/US_40kHz.c ****         }
 460:Generated_Source\PSoC5/US_40kHz.c **** 
 461:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* US_40kHz_UseStatus */
 462:Generated_Source\PSoC5/US_40kHz.c **** 
 463:Generated_Source\PSoC5/US_40kHz.c **** #endif /* !US_40kHz_UsingFixedFunction */
 464:Generated_Source\PSoC5/US_40kHz.c **** 
 465:Generated_Source\PSoC5/US_40kHz.c **** 
 466:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/US_40kHz.c **** * Function Name: US_40kHz_WritePeriod
 468:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************
 469:Generated_Source\PSoC5/US_40kHz.c **** *
 470:Generated_Source\PSoC5/US_40kHz.c **** * Summary:
 471:Generated_Source\PSoC5/US_40kHz.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/US_40kHz.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/US_40kHz.c **** *
 474:Generated_Source\PSoC5/US_40kHz.c **** * Parameters:
 475:Generated_Source\PSoC5/US_40kHz.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/US_40kHz.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/US_40kHz.c **** *
 478:Generated_Source\PSoC5/US_40kHz.c **** * Return:
 479:Generated_Source\PSoC5/US_40kHz.c **** *  None
 480:Generated_Source\PSoC5/US_40kHz.c **** *
 481:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/US_40kHz.c **** void US_40kHz_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/US_40kHz.c **** {
 116              		.loc 1 483 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL1:
 484:Generated_Source\PSoC5/US_40kHz.c ****     #if(US_40kHz_UsingFixedFunction)
 485:Generated_Source\PSoC5/US_40kHz.c ****         CY_SET_REG16(US_40kHz_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/US_40kHz.c ****     #else
 487:Generated_Source\PSoC5/US_40kHz.c ****         CY_SET_REG16(US_40kHz_PERIOD_LSB_PTR, period);
 122              		.loc 1 487 0
 123 0000 014B     		ldr	r3, .L10
 124 0002 1880     		strh	r0, [r3]	@ movhi
 125 0004 7047     		bx	lr
 126              	.L11:
 127 0006 00BF     		.align	2
 128              	.L10:
 129 0008 88680040 		.word	1073768584
 130              		.cfi_endproc
 131              	.LFE7:
 132              		.size	US_40kHz_WritePeriod, .-US_40kHz_WritePeriod
 133              		.section	.text.US_40kHz_WriteCompare1,"ax",%progbits
 134              		.align	2
 135              		.global	US_40kHz_WriteCompare1
 136              		.thumb
 137              		.thumb_func
 138              		.type	US_40kHz_WriteCompare1, %function
 139              	US_40kHz_WriteCompare1:
 140              	.LFB8:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 12


 488:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction) */
 489:Generated_Source\PSoC5/US_40kHz.c **** }
 490:Generated_Source\PSoC5/US_40kHz.c **** 
 491:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_UseOneCompareMode)
 492:Generated_Source\PSoC5/US_40kHz.c **** 
 493:Generated_Source\PSoC5/US_40kHz.c **** 
 494:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_WriteCompare
 496:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/US_40kHz.c ****     *
 498:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 499:Generated_Source\PSoC5/US_40kHz.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/US_40kHz.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/US_40kHz.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/US_40kHz.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/US_40kHz.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/US_40kHz.c ****     *
 505:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 506:Generated_Source\PSoC5/US_40kHz.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/US_40kHz.c ****     *
 508:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 509:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 510:Generated_Source\PSoC5/US_40kHz.c ****     *
 511:Generated_Source\PSoC5/US_40kHz.c ****     * Side Effects:
 512:Generated_Source\PSoC5/US_40kHz.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/US_40kHz.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/US_40kHz.c ****     *
 515:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/US_40kHz.c ****                                        
 518:Generated_Source\PSoC5/US_40kHz.c ****     {
 519:Generated_Source\PSoC5/US_40kHz.c ****         #if(US_40kHz_UsingFixedFunction)
 520:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG16(US_40kHz_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/US_40kHz.c ****         #else
 522:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG16(US_40kHz_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UsingFixedFunction) */
 524:Generated_Source\PSoC5/US_40kHz.c **** 
 525:Generated_Source\PSoC5/US_40kHz.c ****         #if (US_40kHz_PWMMode == US_40kHz__B_PWM__DITHER)
 526:Generated_Source\PSoC5/US_40kHz.c ****             #if(US_40kHz_UsingFixedFunction)
 527:Generated_Source\PSoC5/US_40kHz.c ****                 CY_SET_REG16(US_40kHz_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/US_40kHz.c ****             #else
 529:Generated_Source\PSoC5/US_40kHz.c ****                 CY_SET_REG16(US_40kHz_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/US_40kHz.c ****             #endif /* (US_40kHz_UsingFixedFunction) */
 531:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_PWMMode == US_40kHz__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/US_40kHz.c ****     }
 533:Generated_Source\PSoC5/US_40kHz.c **** 
 534:Generated_Source\PSoC5/US_40kHz.c **** 
 535:Generated_Source\PSoC5/US_40kHz.c **** #else
 536:Generated_Source\PSoC5/US_40kHz.c **** 
 537:Generated_Source\PSoC5/US_40kHz.c **** 
 538:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_WriteCompare1
 540:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/US_40kHz.c ****     *
 542:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 543:Generated_Source\PSoC5/US_40kHz.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/US_40kHz.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 13


 545:Generated_Source\PSoC5/US_40kHz.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/US_40kHz.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/US_40kHz.c ****     *
 548:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 549:Generated_Source\PSoC5/US_40kHz.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/US_40kHz.c ****     *
 551:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 552:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 553:Generated_Source\PSoC5/US_40kHz.c ****     *
 554:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/US_40kHz.c ****                                         
 557:Generated_Source\PSoC5/US_40kHz.c ****     {
 141              		.loc 1 557 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL2:
 558:Generated_Source\PSoC5/US_40kHz.c ****         #if(US_40kHz_UsingFixedFunction)
 559:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG16(US_40kHz_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/US_40kHz.c ****         #else
 561:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG16(US_40kHz_COMPARE1_LSB_PTR, compare);
 147              		.loc 1 561 0
 148 0000 014B     		ldr	r3, .L13
 149 0002 1880     		strh	r0, [r3]	@ movhi
 150 0004 7047     		bx	lr
 151              	.L14:
 152 0006 00BF     		.align	2
 153              	.L13:
 154 0008 48680040 		.word	1073768520
 155              		.cfi_endproc
 156              	.LFE8:
 157              		.size	US_40kHz_WriteCompare1, .-US_40kHz_WriteCompare1
 158              		.section	.text.US_40kHz_WriteCompare2,"ax",%progbits
 159              		.align	2
 160              		.global	US_40kHz_WriteCompare2
 161              		.thumb
 162              		.thumb_func
 163              		.type	US_40kHz_WriteCompare2, %function
 164              	US_40kHz_WriteCompare2:
 165              	.LFB9:
 562:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UsingFixedFunction) */
 563:Generated_Source\PSoC5/US_40kHz.c ****     }
 564:Generated_Source\PSoC5/US_40kHz.c **** 
 565:Generated_Source\PSoC5/US_40kHz.c **** 
 566:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_WriteCompare2
 568:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/US_40kHz.c ****     *
 570:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 571:Generated_Source\PSoC5/US_40kHz.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/US_40kHz.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/US_40kHz.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/US_40kHz.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/US_40kHz.c ****     *  mode.
 576:Generated_Source\PSoC5/US_40kHz.c ****     *
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 14


 577:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 578:Generated_Source\PSoC5/US_40kHz.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/US_40kHz.c ****     *
 580:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 581:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 582:Generated_Source\PSoC5/US_40kHz.c ****     *
 583:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/US_40kHz.c ****                                         
 586:Generated_Source\PSoC5/US_40kHz.c ****     {
 166              		.loc 1 586 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL3:
 587:Generated_Source\PSoC5/US_40kHz.c ****         #if(US_40kHz_UsingFixedFunction)
 588:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG16(US_40kHz_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/US_40kHz.c ****         #else
 590:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG16(US_40kHz_COMPARE2_LSB_PTR, compare);
 172              		.loc 1 590 0
 173 0000 014B     		ldr	r3, .L16
 174 0002 1880     		strh	r0, [r3]	@ movhi
 175 0004 7047     		bx	lr
 176              	.L17:
 177 0006 00BF     		.align	2
 178              	.L16:
 179 0008 68680040 		.word	1073768552
 180              		.cfi_endproc
 181              	.LFE9:
 182              		.size	US_40kHz_WriteCompare2, .-US_40kHz_WriteCompare2
 183              		.section	.text.US_40kHz_SetInterruptMode,"ax",%progbits
 184              		.align	2
 185              		.global	US_40kHz_SetInterruptMode
 186              		.thumb
 187              		.thumb_func
 188              		.type	US_40kHz_SetInterruptMode, %function
 189              	US_40kHz_SetInterruptMode:
 190              	.LFB10:
 591:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UsingFixedFunction) */
 592:Generated_Source\PSoC5/US_40kHz.c ****     }
 593:Generated_Source\PSoC5/US_40kHz.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/US_40kHz.c **** 
 595:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_DeadBandUsed)
 596:Generated_Source\PSoC5/US_40kHz.c **** 
 597:Generated_Source\PSoC5/US_40kHz.c **** 
 598:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_WriteDeadTime
 600:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/US_40kHz.c ****     *
 602:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 603:Generated_Source\PSoC5/US_40kHz.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/US_40kHz.c ****     *
 605:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 606:Generated_Source\PSoC5/US_40kHz.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/US_40kHz.c ****     *
 608:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 15


 609:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 610:Generated_Source\PSoC5/US_40kHz.c ****     *
 611:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/US_40kHz.c ****     {
 614:Generated_Source\PSoC5/US_40kHz.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/US_40kHz.c ****         #if(!US_40kHz_DeadBand2_4)
 616:Generated_Source\PSoC5/US_40kHz.c ****             CY_SET_REG8(US_40kHz_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/US_40kHz.c ****         #else
 618:Generated_Source\PSoC5/US_40kHz.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/US_40kHz.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_DEADBAND_COUNT &= ((uint8)(~US_40kHz_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/US_40kHz.c **** 
 622:Generated_Source\PSoC5/US_40kHz.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/US_40kHz.c ****             #if(US_40kHz_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << US_40kHz_DEADBAND_COUNT_SHIF
 625:Generated_Source\PSoC5/US_40kHz.c ****                                                     US_40kHz_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/US_40kHz.c ****             #else
 627:Generated_Source\PSoC5/US_40kHz.c ****                 US_40kHz_DEADBAND_COUNT |= deadtime & US_40kHz_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/US_40kHz.c ****             #endif /* (US_40kHz_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/US_40kHz.c **** 
 630:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (!US_40kHz_DeadBand2_4) */
 631:Generated_Source\PSoC5/US_40kHz.c ****     }
 632:Generated_Source\PSoC5/US_40kHz.c **** 
 633:Generated_Source\PSoC5/US_40kHz.c **** 
 634:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadDeadTime
 636:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/US_40kHz.c ****     *
 638:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 639:Generated_Source\PSoC5/US_40kHz.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/US_40kHz.c ****     *
 641:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 642:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 643:Generated_Source\PSoC5/US_40kHz.c ****     *
 644:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 645:Generated_Source\PSoC5/US_40kHz.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/US_40kHz.c ****     *
 647:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/US_40kHz.c ****     uint8 US_40kHz_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/US_40kHz.c ****     {
 650:Generated_Source\PSoC5/US_40kHz.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/US_40kHz.c ****         #if(!US_40kHz_DeadBand2_4)
 652:Generated_Source\PSoC5/US_40kHz.c ****             return (CY_GET_REG8(US_40kHz_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/US_40kHz.c ****         #else
 654:Generated_Source\PSoC5/US_40kHz.c **** 
 655:Generated_Source\PSoC5/US_40kHz.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/US_40kHz.c ****             #if(US_40kHz_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/US_40kHz.c ****                 return ((uint8)(((uint8)(US_40kHz_DEADBAND_COUNT & US_40kHz_DEADBAND_COUNT_MASK)) >
 658:Generated_Source\PSoC5/US_40kHz.c ****                                                                            US_40kHz_DEADBAND_COUNT_
 659:Generated_Source\PSoC5/US_40kHz.c ****             #else
 660:Generated_Source\PSoC5/US_40kHz.c ****                 return (US_40kHz_DEADBAND_COUNT & US_40kHz_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/US_40kHz.c ****             #endif /* (US_40kHz_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (!US_40kHz_DeadBand2_4) */
 663:Generated_Source\PSoC5/US_40kHz.c ****     }
 664:Generated_Source\PSoC5/US_40kHz.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/US_40kHz.c **** 
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 16


 666:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_UseStatus || US_40kHz_UsingFixedFunction)
 667:Generated_Source\PSoC5/US_40kHz.c **** 
 668:Generated_Source\PSoC5/US_40kHz.c **** 
 669:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_SetInterruptMode
 671:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/US_40kHz.c ****     *
 673:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 674:Generated_Source\PSoC5/US_40kHz.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/US_40kHz.c ****     *  source status register.
 676:Generated_Source\PSoC5/US_40kHz.c ****     *
 677:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 678:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/US_40kHz.c ****     *
 680:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 681:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 682:Generated_Source\PSoC5/US_40kHz.c ****     *
 683:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/US_40kHz.c ****     {
 191              		.loc 1 685 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL4:
 686:Generated_Source\PSoC5/US_40kHz.c ****         CY_SET_REG8(US_40kHz_STATUS_MASK_PTR, interruptMode);
 197              		.loc 1 686 0
 198 0000 014B     		ldr	r3, .L19
 199 0002 1870     		strb	r0, [r3]
 200 0004 7047     		bx	lr
 201              	.L20:
 202 0006 00BF     		.align	2
 203              	.L19:
 204 0008 85640040 		.word	1073767557
 205              		.cfi_endproc
 206              	.LFE10:
 207              		.size	US_40kHz_SetInterruptMode, .-US_40kHz_SetInterruptMode
 208              		.section	.text.US_40kHz_ReadStatusRegister,"ax",%progbits
 209              		.align	2
 210              		.global	US_40kHz_ReadStatusRegister
 211              		.thumb
 212              		.thumb_func
 213              		.type	US_40kHz_ReadStatusRegister, %function
 214              	US_40kHz_ReadStatusRegister:
 215              	.LFB11:
 687:Generated_Source\PSoC5/US_40kHz.c ****     }
 688:Generated_Source\PSoC5/US_40kHz.c **** 
 689:Generated_Source\PSoC5/US_40kHz.c **** 
 690:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadStatusRegister
 692:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/US_40kHz.c ****     *
 694:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 695:Generated_Source\PSoC5/US_40kHz.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/US_40kHz.c ****     *
 697:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 17


 698:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 699:Generated_Source\PSoC5/US_40kHz.c ****     *
 700:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 701:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/US_40kHz.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/US_40kHz.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/US_40kHz.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/US_40kHz.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/US_40kHz.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/US_40kHz.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/US_40kHz.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/US_40kHz.c ****     *
 710:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/US_40kHz.c ****     uint8 US_40kHz_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/US_40kHz.c ****     {
 216              		.loc 1 712 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 713:Generated_Source\PSoC5/US_40kHz.c ****         return (CY_GET_REG8(US_40kHz_STATUS_PTR));
 221              		.loc 1 713 0
 222 0000 014B     		ldr	r3, .L22
 223 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/US_40kHz.c ****     }
 224              		.loc 1 714 0
 225 0004 7047     		bx	lr
 226              	.L23:
 227 0006 00BF     		.align	2
 228              	.L22:
 229 0008 65640040 		.word	1073767525
 230              		.cfi_endproc
 231              	.LFE11:
 232              		.size	US_40kHz_ReadStatusRegister, .-US_40kHz_ReadStatusRegister
 233              		.section	.text.US_40kHz_ReadCapture,"ax",%progbits
 234              		.align	2
 235              		.global	US_40kHz_ReadCapture
 236              		.thumb
 237              		.thumb_func
 238              		.type	US_40kHz_ReadCapture, %function
 239              	US_40kHz_ReadCapture:
 240              	.LFB12:
 715:Generated_Source\PSoC5/US_40kHz.c **** 
 716:Generated_Source\PSoC5/US_40kHz.c **** #endif /* (US_40kHz_UseStatus || US_40kHz_UsingFixedFunction) */
 717:Generated_Source\PSoC5/US_40kHz.c **** 
 718:Generated_Source\PSoC5/US_40kHz.c **** 
 719:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_UseControl)
 720:Generated_Source\PSoC5/US_40kHz.c **** 
 721:Generated_Source\PSoC5/US_40kHz.c **** 
 722:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadControlRegister
 724:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/US_40kHz.c ****     *
 726:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 727:Generated_Source\PSoC5/US_40kHz.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/US_40kHz.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/US_40kHz.c ****     *
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 18


 730:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 731:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 732:Generated_Source\PSoC5/US_40kHz.c ****     *
 733:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 734:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/US_40kHz.c ****     *
 736:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/US_40kHz.c ****     uint8 US_40kHz_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/US_40kHz.c ****     {
 739:Generated_Source\PSoC5/US_40kHz.c ****         uint8 result;
 740:Generated_Source\PSoC5/US_40kHz.c **** 
 741:Generated_Source\PSoC5/US_40kHz.c ****         result = CY_GET_REG8(US_40kHz_CONTROL_PTR);
 742:Generated_Source\PSoC5/US_40kHz.c ****         return (result);
 743:Generated_Source\PSoC5/US_40kHz.c ****     }
 744:Generated_Source\PSoC5/US_40kHz.c **** 
 745:Generated_Source\PSoC5/US_40kHz.c **** 
 746:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_WriteControlRegister
 748:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/US_40kHz.c ****     *
 750:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 751:Generated_Source\PSoC5/US_40kHz.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/US_40kHz.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/US_40kHz.c ****     *
 754:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 755:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/US_40kHz.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/US_40kHz.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/US_40kHz.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/US_40kHz.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/US_40kHz.c ****     *
 761:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 762:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 763:Generated_Source\PSoC5/US_40kHz.c ****     *
 764:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/US_40kHz.c ****     void US_40kHz_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/US_40kHz.c ****     {
 767:Generated_Source\PSoC5/US_40kHz.c ****         CY_SET_REG8(US_40kHz_CONTROL_PTR, control);
 768:Generated_Source\PSoC5/US_40kHz.c ****     }
 769:Generated_Source\PSoC5/US_40kHz.c **** 
 770:Generated_Source\PSoC5/US_40kHz.c **** #endif /* (US_40kHz_UseControl) */
 771:Generated_Source\PSoC5/US_40kHz.c **** 
 772:Generated_Source\PSoC5/US_40kHz.c **** 
 773:Generated_Source\PSoC5/US_40kHz.c **** #if (!US_40kHz_UsingFixedFunction)
 774:Generated_Source\PSoC5/US_40kHz.c **** 
 775:Generated_Source\PSoC5/US_40kHz.c **** 
 776:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadCapture
 778:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/US_40kHz.c ****     *
 780:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 781:Generated_Source\PSoC5/US_40kHz.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/US_40kHz.c ****     *
 783:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 784:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 785:Generated_Source\PSoC5/US_40kHz.c ****     *
 786:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 19


 787:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/US_40kHz.c ****     *
 789:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/US_40kHz.c ****     uint16 US_40kHz_ReadCapture(void) 
 791:Generated_Source\PSoC5/US_40kHz.c ****     {
 241              		.loc 1 791 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 792:Generated_Source\PSoC5/US_40kHz.c ****         return (CY_GET_REG16(US_40kHz_CAPTURE_LSB_PTR));
 246              		.loc 1 792 0
 247 0000 014B     		ldr	r3, .L25
 248 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/US_40kHz.c ****     }
 249              		.loc 1 793 0
 250 0004 80B2     		uxth	r0, r0
 251 0006 7047     		bx	lr
 252              	.L26:
 253              		.align	2
 254              	.L25:
 255 0008 A8680040 		.word	1073768616
 256              		.cfi_endproc
 257              	.LFE12:
 258              		.size	US_40kHz_ReadCapture, .-US_40kHz_ReadCapture
 259              		.section	.text.US_40kHz_ClearFIFO,"ax",%progbits
 260              		.align	2
 261              		.global	US_40kHz_ClearFIFO
 262              		.thumb
 263              		.thumb_func
 264              		.type	US_40kHz_ClearFIFO, %function
 265              	US_40kHz_ClearFIFO:
 266              	.LFB6:
 454:Generated_Source\PSoC5/US_40kHz.c ****             while(0u != (US_40kHz_ReadStatusRegister() & US_40kHz_STATUS_FIFONEMPTY))
 267              		.loc 1 454 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/US_40kHz.c ****             {
 275              		.loc 1 455 0
 276 0002 01E0     		b	.L28
 277              	.L29:
 457:Generated_Source\PSoC5/US_40kHz.c ****             }
 278              		.loc 1 457 0
 279 0004 FFF7FEFF 		bl	US_40kHz_ReadCapture
 280              	.LVL5:
 281              	.L28:
 455:Generated_Source\PSoC5/US_40kHz.c ****             {
 282              		.loc 1 455 0
 283 0008 FFF7FEFF 		bl	US_40kHz_ReadStatusRegister
 284              	.LVL6:
 285 000c 10F0100F 		tst	r0, #16
 286 0010 F8D1     		bne	.L29
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 20


 459:Generated_Source\PSoC5/US_40kHz.c **** 
 287              		.loc 1 459 0
 288 0012 08BD     		pop	{r3, pc}
 289              		.cfi_endproc
 290              	.LFE6:
 291              		.size	US_40kHz_ClearFIFO, .-US_40kHz_ClearFIFO
 292              		.section	.text.US_40kHz_Init,"ax",%progbits
 293              		.align	2
 294              		.global	US_40kHz_Init
 295              		.thumb
 296              		.thumb_func
 297              		.type	US_40kHz_Init, %function
 298              	US_40kHz_Init:
 299              	.LFB1:
  85:Generated_Source\PSoC5/US_40kHz.c ****     #if (US_40kHz_UsingFixedFunction || US_40kHz_UseControl)
 300              		.loc 1 85 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 10B5     		push	{r4, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 129:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_AUX_CONTROLDP1 |= (US_40kHz_AUX_CTRL_FIFO0_CLR);
 308              		.loc 1 129 0
 309 0002 134A     		ldr	r2, .L33
 310 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 311 0006 43F00103 		orr	r3, r3, #1
 312 000a 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_Resolution == 8) */
 313              		.loc 1 130 0
 314 000c 114C     		ldr	r4, .L33+4
 315 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 316 0010 43F00103 		orr	r3, r3, #1
 317 0014 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (!US_40kHz_UsingFixedFunction) */
 318              		.loc 1 133 0
 319 0016 40F22B10 		movw	r0, #299
 320 001a FFF7FEFF 		bl	US_40kHz_WriteCounter
 321              	.LVL7:
 136:Generated_Source\PSoC5/US_40kHz.c **** 
 322              		.loc 1 136 0
 323 001e 40F22B10 		movw	r0, #299
 324 0022 FFF7FEFF 		bl	US_40kHz_WritePeriod
 325              	.LVL8:
 141:Generated_Source\PSoC5/US_40kHz.c ****             US_40kHz_WriteCompare2(US_40kHz_INIT_COMPARE_VALUE2);
 326              		.loc 1 141 0
 327 0026 9620     		movs	r0, #150
 328 0028 FFF7FEFF 		bl	US_40kHz_WriteCompare1
 329              	.LVL9:
 142:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UseOneCompareMode) */
 330              		.loc 1 142 0
 331 002c 9620     		movs	r0, #150
 332 002e FFF7FEFF 		bl	US_40kHz_WriteCompare2
 333              	.LVL10:
 154:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UseStatus || US_40kHz_UsingFixedFunction) */
 334              		.loc 1 154 0
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 21


 335 0032 0020     		movs	r0, #0
 336 0034 FFF7FEFF 		bl	US_40kHz_SetInterruptMode
 337              	.LVL11:
 167:Generated_Source\PSoC5/US_40kHz.c ****             /* Use the interrupt output of the status register for IRQ output */
 338              		.loc 1 167 0
 339 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 340              	.LVL12:
 169:Generated_Source\PSoC5/US_40kHz.c **** 
 341              		.loc 1 169 0
 342 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 343 003e 43F01003 		orr	r3, r3, #16
 344 0042 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/US_40kHz.c **** 
 345              		.loc 1 172 0
 346 0044 FFF7FEFF 		bl	CyExitCriticalSection
 347              	.LVL13:
 176:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UseStatus) */
 348              		.loc 1 176 0
 349 0048 FFF7FEFF 		bl	US_40kHz_ClearFIFO
 350              	.LVL14:
 351 004c 10BD     		pop	{r4, pc}
 352              	.L34:
 353 004e 00BF     		.align	2
 354              	.L33:
 355 0050 94640040 		.word	1073767572
 356 0054 95640040 		.word	1073767573
 357              		.cfi_endproc
 358              	.LFE1:
 359              		.size	US_40kHz_Init, .-US_40kHz_Init
 360              		.section	.text.US_40kHz_Start,"ax",%progbits
 361              		.align	2
 362              		.global	US_40kHz_Start
 363              		.thumb
 364              		.thumb_func
 365              		.type	US_40kHz_Start, %function
 366              	US_40kHz_Start:
 367              	.LFB0:
  56:Generated_Source\PSoC5/US_40kHz.c ****     /* If not Initialized then initialize all required hardware and software */
 368              		.loc 1 56 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/US_40kHz.c ****     {
 376              		.loc 1 58 0
 377 0002 044B     		ldr	r3, .L38
 378 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 379 0006 23B9     		cbnz	r3, .L35
  60:Generated_Source\PSoC5/US_40kHz.c ****         US_40kHz_initVar = 1u;
 380              		.loc 1 60 0
 381 0008 FFF7FEFF 		bl	US_40kHz_Init
 382              	.LVL15:
  61:Generated_Source\PSoC5/US_40kHz.c ****     }
 383              		.loc 1 61 0
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 22


 384 000c 0122     		movs	r2, #1
 385 000e 014B     		ldr	r3, .L38
 386 0010 1A70     		strb	r2, [r3]
 387              	.L35:
 388 0012 08BD     		pop	{r3, pc}
 389              	.L39:
 390              		.align	2
 391              	.L38:
 392 0014 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE0:
 395              		.size	US_40kHz_Start, .-US_40kHz_Start
 396              		.section	.text.US_40kHz_ReadCompare1,"ax",%progbits
 397              		.align	2
 398              		.global	US_40kHz_ReadCompare1
 399              		.thumb
 400              		.thumb_func
 401              		.type	US_40kHz_ReadCompare1, %function
 402              	US_40kHz_ReadCompare1:
 403              	.LFB13:
 794:Generated_Source\PSoC5/US_40kHz.c **** 
 795:Generated_Source\PSoC5/US_40kHz.c **** #endif /* (!US_40kHz_UsingFixedFunction) */
 796:Generated_Source\PSoC5/US_40kHz.c **** 
 797:Generated_Source\PSoC5/US_40kHz.c **** 
 798:Generated_Source\PSoC5/US_40kHz.c **** #if (US_40kHz_UseOneCompareMode)
 799:Generated_Source\PSoC5/US_40kHz.c **** 
 800:Generated_Source\PSoC5/US_40kHz.c **** 
 801:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadCompare
 803:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/US_40kHz.c ****     *
 805:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 806:Generated_Source\PSoC5/US_40kHz.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/US_40kHz.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/US_40kHz.c ****     *
 809:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 810:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 811:Generated_Source\PSoC5/US_40kHz.c ****     *
 812:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 813:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/US_40kHz.c ****     *
 815:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/US_40kHz.c ****     uint16 US_40kHz_ReadCompare(void) 
 817:Generated_Source\PSoC5/US_40kHz.c ****     {
 818:Generated_Source\PSoC5/US_40kHz.c ****         #if(US_40kHz_UsingFixedFunction)
 819:Generated_Source\PSoC5/US_40kHz.c ****             return ((uint16)CY_GET_REG16(US_40kHz_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/US_40kHz.c ****         #else
 821:Generated_Source\PSoC5/US_40kHz.c ****             return (CY_GET_REG16(US_40kHz_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/US_40kHz.c ****         #endif /* (US_40kHz_UsingFixedFunction) */
 823:Generated_Source\PSoC5/US_40kHz.c ****     }
 824:Generated_Source\PSoC5/US_40kHz.c **** 
 825:Generated_Source\PSoC5/US_40kHz.c **** #else
 826:Generated_Source\PSoC5/US_40kHz.c **** 
 827:Generated_Source\PSoC5/US_40kHz.c **** 
 828:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadCompare1
 830:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 23


 831:Generated_Source\PSoC5/US_40kHz.c ****     *
 832:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 833:Generated_Source\PSoC5/US_40kHz.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/US_40kHz.c ****     *
 835:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 836:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 837:Generated_Source\PSoC5/US_40kHz.c ****     *
 838:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 839:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/US_40kHz.c ****     *
 841:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/US_40kHz.c ****     uint16 US_40kHz_ReadCompare1(void) 
 843:Generated_Source\PSoC5/US_40kHz.c ****     {
 404              		.loc 1 843 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 844:Generated_Source\PSoC5/US_40kHz.c ****         return (CY_GET_REG16(US_40kHz_COMPARE1_LSB_PTR));
 409              		.loc 1 844 0
 410 0000 014B     		ldr	r3, .L41
 411 0002 1888     		ldrh	r0, [r3]
 845:Generated_Source\PSoC5/US_40kHz.c ****     }
 412              		.loc 1 845 0
 413 0004 80B2     		uxth	r0, r0
 414 0006 7047     		bx	lr
 415              	.L42:
 416              		.align	2
 417              	.L41:
 418 0008 48680040 		.word	1073768520
 419              		.cfi_endproc
 420              	.LFE13:
 421              		.size	US_40kHz_ReadCompare1, .-US_40kHz_ReadCompare1
 422              		.section	.text.US_40kHz_ReadCompare2,"ax",%progbits
 423              		.align	2
 424              		.global	US_40kHz_ReadCompare2
 425              		.thumb
 426              		.thumb_func
 427              		.type	US_40kHz_ReadCompare2, %function
 428              	US_40kHz_ReadCompare2:
 429              	.LFB14:
 846:Generated_Source\PSoC5/US_40kHz.c **** 
 847:Generated_Source\PSoC5/US_40kHz.c **** 
 848:Generated_Source\PSoC5/US_40kHz.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/US_40kHz.c ****     * Function Name: US_40kHz_ReadCompare2
 850:Generated_Source\PSoC5/US_40kHz.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/US_40kHz.c ****     *
 852:Generated_Source\PSoC5/US_40kHz.c ****     * Summary:
 853:Generated_Source\PSoC5/US_40kHz.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/US_40kHz.c ****     *
 855:Generated_Source\PSoC5/US_40kHz.c ****     * Parameters:
 856:Generated_Source\PSoC5/US_40kHz.c ****     *  None
 857:Generated_Source\PSoC5/US_40kHz.c ****     *
 858:Generated_Source\PSoC5/US_40kHz.c ****     * Return:
 859:Generated_Source\PSoC5/US_40kHz.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/US_40kHz.c ****     *
 861:Generated_Source\PSoC5/US_40kHz.c ****     *******************************************************************************/
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 24


 862:Generated_Source\PSoC5/US_40kHz.c ****     uint16 US_40kHz_ReadCompare2(void) 
 863:Generated_Source\PSoC5/US_40kHz.c ****     {
 430              		.loc 1 863 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 864:Generated_Source\PSoC5/US_40kHz.c ****         return (CY_GET_REG16(US_40kHz_COMPARE2_LSB_PTR));
 435              		.loc 1 864 0
 436 0000 014B     		ldr	r3, .L44
 437 0002 1888     		ldrh	r0, [r3]
 865:Generated_Source\PSoC5/US_40kHz.c ****     }
 438              		.loc 1 865 0
 439 0004 80B2     		uxth	r0, r0
 440 0006 7047     		bx	lr
 441              	.L45:
 442              		.align	2
 443              	.L44:
 444 0008 68680040 		.word	1073768552
 445              		.cfi_endproc
 446              	.LFE14:
 447              		.size	US_40kHz_ReadCompare2, .-US_40kHz_ReadCompare2
 448              		.section	.text.US_40kHz_ReadPeriod,"ax",%progbits
 449              		.align	2
 450              		.global	US_40kHz_ReadPeriod
 451              		.thumb
 452              		.thumb_func
 453              		.type	US_40kHz_ReadPeriod, %function
 454              	US_40kHz_ReadPeriod:
 455              	.LFB15:
 866:Generated_Source\PSoC5/US_40kHz.c **** 
 867:Generated_Source\PSoC5/US_40kHz.c **** #endif /* (US_40kHz_UseOneCompareMode) */
 868:Generated_Source\PSoC5/US_40kHz.c **** 
 869:Generated_Source\PSoC5/US_40kHz.c **** 
 870:Generated_Source\PSoC5/US_40kHz.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/US_40kHz.c **** * Function Name: US_40kHz_ReadPeriod
 872:Generated_Source\PSoC5/US_40kHz.c **** ********************************************************************************
 873:Generated_Source\PSoC5/US_40kHz.c **** *
 874:Generated_Source\PSoC5/US_40kHz.c **** * Summary:
 875:Generated_Source\PSoC5/US_40kHz.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/US_40kHz.c **** *
 877:Generated_Source\PSoC5/US_40kHz.c **** * Parameters:
 878:Generated_Source\PSoC5/US_40kHz.c **** *  None
 879:Generated_Source\PSoC5/US_40kHz.c **** *
 880:Generated_Source\PSoC5/US_40kHz.c **** * Return:
 881:Generated_Source\PSoC5/US_40kHz.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/US_40kHz.c **** *
 883:Generated_Source\PSoC5/US_40kHz.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/US_40kHz.c **** uint16 US_40kHz_ReadPeriod(void) 
 885:Generated_Source\PSoC5/US_40kHz.c **** {
 456              		.loc 1 885 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 886:Generated_Source\PSoC5/US_40kHz.c ****     #if(US_40kHz_UsingFixedFunction)
 887:Generated_Source\PSoC5/US_40kHz.c ****         return ((uint16)CY_GET_REG16(US_40kHz_PERIOD_LSB_PTR));
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 25


 888:Generated_Source\PSoC5/US_40kHz.c ****     #else
 889:Generated_Source\PSoC5/US_40kHz.c ****         return (CY_GET_REG16(US_40kHz_PERIOD_LSB_PTR));
 461              		.loc 1 889 0
 462 0000 014B     		ldr	r3, .L47
 463 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/US_40kHz.c ****     #endif /* (US_40kHz_UsingFixedFunction) */
 891:Generated_Source\PSoC5/US_40kHz.c **** }
 464              		.loc 1 891 0
 465 0004 80B2     		uxth	r0, r0
 466 0006 7047     		bx	lr
 467              	.L48:
 468              		.align	2
 469              	.L47:
 470 0008 88680040 		.word	1073768584
 471              		.cfi_endproc
 472              	.LFE15:
 473              		.size	US_40kHz_ReadPeriod, .-US_40kHz_ReadPeriod
 474              		.global	US_40kHz_initVar
 475              		.bss
 476              		.set	.LANCHOR0,. + 0
 477              		.type	US_40kHz_initVar, %object
 478              		.size	US_40kHz_initVar, 1
 479              	US_40kHz_initVar:
 480 0000 00       		.space	1
 481              		.text
 482              	.Letext0:
 483              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 484              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 485              		.section	.debug_info,"",%progbits
 486              	.Ldebug_info0:
 487 0000 33030000 		.4byte	0x333
 488 0004 0400     		.2byte	0x4
 489 0006 00000000 		.4byte	.Ldebug_abbrev0
 490 000a 04       		.byte	0x4
 491 000b 01       		.uleb128 0x1
 492 000c CD010000 		.4byte	.LASF37
 493 0010 01       		.byte	0x1
 494 0011 1D000000 		.4byte	.LASF38
 495 0015 BE020000 		.4byte	.LASF39
 496 0019 00000000 		.4byte	.Ldebug_ranges0+0
 497 001d 00000000 		.4byte	0
 498 0021 00000000 		.4byte	.Ldebug_line0
 499 0025 02       		.uleb128 0x2
 500 0026 01       		.byte	0x1
 501 0027 06       		.byte	0x6
 502 0028 5F030000 		.4byte	.LASF0
 503 002c 02       		.uleb128 0x2
 504 002d 01       		.byte	0x1
 505 002e 08       		.byte	0x8
 506 002f 2C010000 		.4byte	.LASF1
 507 0033 02       		.uleb128 0x2
 508 0034 02       		.byte	0x2
 509 0035 05       		.byte	0x5
 510 0036 47030000 		.4byte	.LASF2
 511 003a 02       		.uleb128 0x2
 512 003b 02       		.byte	0x2
 513 003c 07       		.byte	0x7
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 26


 514 003d 98000000 		.4byte	.LASF3
 515 0041 02       		.uleb128 0x2
 516 0042 04       		.byte	0x4
 517 0043 05       		.byte	0x5
 518 0044 51030000 		.4byte	.LASF4
 519 0048 02       		.uleb128 0x2
 520 0049 04       		.byte	0x4
 521 004a 07       		.byte	0x7
 522 004b 62010000 		.4byte	.LASF5
 523 004f 02       		.uleb128 0x2
 524 0050 08       		.byte	0x8
 525 0051 05       		.byte	0x5
 526 0052 2B030000 		.4byte	.LASF6
 527 0056 02       		.uleb128 0x2
 528 0057 08       		.byte	0x8
 529 0058 07       		.byte	0x7
 530 0059 15010000 		.4byte	.LASF7
 531 005d 03       		.uleb128 0x3
 532 005e 04       		.byte	0x4
 533 005f 05       		.byte	0x5
 534 0060 696E7400 		.ascii	"int\000"
 535 0064 02       		.uleb128 0x2
 536 0065 04       		.byte	0x4
 537 0066 07       		.byte	0x7
 538 0067 72020000 		.4byte	.LASF8
 539 006b 04       		.uleb128 0x4
 540 006c 88010000 		.4byte	.LASF9
 541 0070 02       		.byte	0x2
 542 0071 9201     		.2byte	0x192
 543 0073 2C000000 		.4byte	0x2c
 544 0077 04       		.uleb128 0x4
 545 0078 C6010000 		.4byte	.LASF10
 546 007c 02       		.byte	0x2
 547 007d 9301     		.2byte	0x193
 548 007f 3A000000 		.4byte	0x3a
 549 0083 02       		.uleb128 0x2
 550 0084 04       		.byte	0x4
 551 0085 04       		.byte	0x4
 552 0086 07010000 		.4byte	.LASF11
 553 008a 02       		.uleb128 0x2
 554 008b 08       		.byte	0x8
 555 008c 04       		.byte	0x4
 556 008d BF010000 		.4byte	.LASF12
 557 0091 02       		.uleb128 0x2
 558 0092 01       		.byte	0x1
 559 0093 08       		.byte	0x8
 560 0094 5A030000 		.4byte	.LASF13
 561 0098 04       		.uleb128 0x4
 562 0099 1D030000 		.4byte	.LASF14
 563 009d 02       		.byte	0x2
 564 009e 3C02     		.2byte	0x23c
 565 00a0 A4000000 		.4byte	0xa4
 566 00a4 05       		.uleb128 0x5
 567 00a5 6B000000 		.4byte	0x6b
 568 00a9 04       		.uleb128 0x4
 569 00aa 00000000 		.4byte	.LASF15
 570 00ae 02       		.byte	0x2
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 27


 571 00af 3D02     		.2byte	0x23d
 572 00b1 B5000000 		.4byte	0xb5
 573 00b5 05       		.uleb128 0x5
 574 00b6 77000000 		.4byte	0x77
 575 00ba 02       		.uleb128 0x2
 576 00bb 04       		.byte	0x4
 577 00bc 07       		.byte	0x7
 578 00bd 22030000 		.4byte	.LASF16
 579 00c1 06       		.uleb128 0x6
 580 00c2 52010000 		.4byte	.LASF17
 581 00c6 01       		.byte	0x1
 582 00c7 C7       		.byte	0xc7
 583 00c8 00000000 		.4byte	.LFB2
 584 00cc 02000000 		.4byte	.LFE2-.LFB2
 585 00d0 01       		.uleb128 0x1
 586 00d1 9C       		.byte	0x9c
 587 00d2 06       		.uleb128 0x6
 588 00d3 F9000000 		.4byte	.LASF18
 589 00d7 01       		.byte	0x1
 590 00d8 E9       		.byte	0xe9
 591 00d9 00000000 		.4byte	.LFB3
 592 00dd 02000000 		.4byte	.LFE3-.LFB3
 593 00e1 01       		.uleb128 0x1
 594 00e2 9C       		.byte	0x9c
 595 00e3 07       		.uleb128 0x7
 596 00e4 3F000000 		.4byte	.LASF19
 597 00e8 01       		.byte	0x1
 598 00e9 9301     		.2byte	0x193
 599 00eb 00000000 		.4byte	.LFB4
 600 00ef 0C000000 		.4byte	.LFE4-.LFB4
 601 00f3 01       		.uleb128 0x1
 602 00f4 9C       		.byte	0x9c
 603 00f5 08010000 		.4byte	0x108
 604 00f9 08       		.uleb128 0x8
 605 00fa 0D010000 		.4byte	.LASF21
 606 00fe 01       		.byte	0x1
 607 00ff 9301     		.2byte	0x193
 608 0101 77000000 		.4byte	0x77
 609 0105 01       		.uleb128 0x1
 610 0106 50       		.byte	0x50
 611 0107 00       		.byte	0
 612 0108 09       		.uleb128 0x9
 613 0109 66000000 		.4byte	.LASF28
 614 010d 01       		.byte	0x1
 615 010e A901     		.2byte	0x1a9
 616 0110 77000000 		.4byte	0x77
 617 0114 00000000 		.4byte	.LFB5
 618 0118 14000000 		.4byte	.LFE5-.LFB5
 619 011c 01       		.uleb128 0x1
 620 011d 9C       		.byte	0x9c
 621 011e 07       		.uleb128 0x7
 622 011f AA010000 		.4byte	.LASF20
 623 0123 01       		.byte	0x1
 624 0124 E201     		.2byte	0x1e2
 625 0126 00000000 		.4byte	.LFB7
 626 012a 0C000000 		.4byte	.LFE7-.LFB7
 627 012e 01       		.uleb128 0x1
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 28


 628 012f 9C       		.byte	0x9c
 629 0130 43010000 		.4byte	0x143
 630 0134 08       		.uleb128 0x8
 631 0135 7B000000 		.4byte	.LASF22
 632 0139 01       		.byte	0x1
 633 013a E201     		.2byte	0x1e2
 634 013c 77000000 		.4byte	0x77
 635 0140 01       		.uleb128 0x1
 636 0141 50       		.byte	0x50
 637 0142 00       		.byte	0
 638 0143 07       		.uleb128 0x7
 639 0144 06000000 		.4byte	.LASF23
 640 0148 01       		.byte	0x1
 641 0149 2B02     		.2byte	0x22b
 642 014b 00000000 		.4byte	.LFB8
 643 014f 0C000000 		.4byte	.LFE8-.LFB8
 644 0153 01       		.uleb128 0x1
 645 0154 9C       		.byte	0x9c
 646 0155 68010000 		.4byte	0x168
 647 0159 08       		.uleb128 0x8
 648 015a 6B030000 		.4byte	.LASF24
 649 015e 01       		.byte	0x1
 650 015f 2B02     		.2byte	0x22b
 651 0161 77000000 		.4byte	0x77
 652 0165 01       		.uleb128 0x1
 653 0166 50       		.byte	0x50
 654 0167 00       		.byte	0
 655 0168 07       		.uleb128 0x7
 656 0169 C5000000 		.4byte	.LASF25
 657 016d 01       		.byte	0x1
 658 016e 4802     		.2byte	0x248
 659 0170 00000000 		.4byte	.LFB9
 660 0174 0C000000 		.4byte	.LFE9-.LFB9
 661 0178 01       		.uleb128 0x1
 662 0179 9C       		.byte	0x9c
 663 017a 8D010000 		.4byte	0x18d
 664 017e 08       		.uleb128 0x8
 665 017f 6B030000 		.4byte	.LASF24
 666 0183 01       		.byte	0x1
 667 0184 4802     		.2byte	0x248
 668 0186 77000000 		.4byte	0x77
 669 018a 01       		.uleb128 0x1
 670 018b 50       		.byte	0x50
 671 018c 00       		.byte	0
 672 018d 07       		.uleb128 0x7
 673 018e AB000000 		.4byte	.LASF26
 674 0192 01       		.byte	0x1
 675 0193 AC02     		.2byte	0x2ac
 676 0195 00000000 		.4byte	.LFB10
 677 0199 0C000000 		.4byte	.LFE10-.LFB10
 678 019d 01       		.uleb128 0x1
 679 019e 9C       		.byte	0x9c
 680 019f B2010000 		.4byte	0x1b2
 681 01a3 08       		.uleb128 0x8
 682 01a4 39030000 		.4byte	.LASF27
 683 01a8 01       		.byte	0x1
 684 01a9 AC02     		.2byte	0x2ac
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 29


 685 01ab 6B000000 		.4byte	0x6b
 686 01af 01       		.uleb128 0x1
 687 01b0 50       		.byte	0x50
 688 01b1 00       		.byte	0
 689 01b2 09       		.uleb128 0x9
 690 01b3 8E010000 		.4byte	.LASF29
 691 01b7 01       		.byte	0x1
 692 01b8 C702     		.2byte	0x2c7
 693 01ba 6B000000 		.4byte	0x6b
 694 01be 00000000 		.4byte	.LFB11
 695 01c2 0C000000 		.4byte	.LFE11-.LFB11
 696 01c6 01       		.uleb128 0x1
 697 01c7 9C       		.byte	0x9c
 698 01c8 09       		.uleb128 0x9
 699 01c9 73030000 		.4byte	.LASF30
 700 01cd 01       		.byte	0x1
 701 01ce 1603     		.2byte	0x316
 702 01d0 77000000 		.4byte	0x77
 703 01d4 00000000 		.4byte	.LFB12
 704 01d8 0C000000 		.4byte	.LFE12-.LFB12
 705 01dc 01       		.uleb128 0x1
 706 01dd 9C       		.byte	0x9c
 707 01de 07       		.uleb128 0x7
 708 01df AB020000 		.4byte	.LASF31
 709 01e3 01       		.byte	0x1
 710 01e4 C501     		.2byte	0x1c5
 711 01e6 00000000 		.4byte	.LFB6
 712 01ea 14000000 		.4byte	.LFE6-.LFB6
 713 01ee 01       		.uleb128 0x1
 714 01ef 9C       		.byte	0x9c
 715 01f0 07020000 		.4byte	0x207
 716 01f4 0A       		.uleb128 0xa
 717 01f5 08000000 		.4byte	.LVL5
 718 01f9 C8010000 		.4byte	0x1c8
 719 01fd 0A       		.uleb128 0xa
 720 01fe 0C000000 		.4byte	.LVL6
 721 0202 B2010000 		.4byte	0x1b2
 722 0206 00       		.byte	0
 723 0207 0B       		.uleb128 0xb
 724 0208 DC000000 		.4byte	.LASF32
 725 020c 01       		.byte	0x1
 726 020d 54       		.byte	0x54
 727 020e 00000000 		.4byte	.LFB1
 728 0212 58000000 		.4byte	.LFE1-.LFB1
 729 0216 01       		.uleb128 0x1
 730 0217 9C       		.byte	0x9c
 731 0218 AC020000 		.4byte	0x2ac
 732 021c 0C       		.uleb128 0xc
 733 021d 3A010000 		.4byte	.LASF40
 734 0221 01       		.byte	0x1
 735 0222 5D       		.byte	0x5d
 736 0223 6B000000 		.4byte	0x6b
 737 0227 00000000 		.4byte	.LLST0
 738 022b 0D       		.uleb128 0xd
 739 022c 1E000000 		.4byte	.LVL7
 740 0230 E3000000 		.4byte	0xe3
 741 0234 40020000 		.4byte	0x240
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 30


 742 0238 0E       		.uleb128 0xe
 743 0239 01       		.uleb128 0x1
 744 023a 50       		.byte	0x50
 745 023b 03       		.uleb128 0x3
 746 023c 0A       		.byte	0xa
 747 023d 2B01     		.2byte	0x12b
 748 023f 00       		.byte	0
 749 0240 0D       		.uleb128 0xd
 750 0241 26000000 		.4byte	.LVL8
 751 0245 1E010000 		.4byte	0x11e
 752 0249 55020000 		.4byte	0x255
 753 024d 0E       		.uleb128 0xe
 754 024e 01       		.uleb128 0x1
 755 024f 50       		.byte	0x50
 756 0250 03       		.uleb128 0x3
 757 0251 0A       		.byte	0xa
 758 0252 2B01     		.2byte	0x12b
 759 0254 00       		.byte	0
 760 0255 0D       		.uleb128 0xd
 761 0256 2C000000 		.4byte	.LVL9
 762 025a 43010000 		.4byte	0x143
 763 025e 69020000 		.4byte	0x269
 764 0262 0E       		.uleb128 0xe
 765 0263 01       		.uleb128 0x1
 766 0264 50       		.byte	0x50
 767 0265 02       		.uleb128 0x2
 768 0266 08       		.byte	0x8
 769 0267 96       		.byte	0x96
 770 0268 00       		.byte	0
 771 0269 0D       		.uleb128 0xd
 772 026a 32000000 		.4byte	.LVL10
 773 026e 68010000 		.4byte	0x168
 774 0272 7D020000 		.4byte	0x27d
 775 0276 0E       		.uleb128 0xe
 776 0277 01       		.uleb128 0x1
 777 0278 50       		.byte	0x50
 778 0279 02       		.uleb128 0x2
 779 027a 08       		.byte	0x8
 780 027b 96       		.byte	0x96
 781 027c 00       		.byte	0
 782 027d 0D       		.uleb128 0xd
 783 027e 38000000 		.4byte	.LVL11
 784 0282 8D010000 		.4byte	0x18d
 785 0286 90020000 		.4byte	0x290
 786 028a 0E       		.uleb128 0xe
 787 028b 01       		.uleb128 0x1
 788 028c 50       		.byte	0x50
 789 028d 01       		.uleb128 0x1
 790 028e 30       		.byte	0x30
 791 028f 00       		.byte	0
 792 0290 0A       		.uleb128 0xa
 793 0291 3C000000 		.4byte	.LVL12
 794 0295 1E030000 		.4byte	0x31e
 795 0299 0A       		.uleb128 0xa
 796 029a 48000000 		.4byte	.LVL13
 797 029e 29030000 		.4byte	0x329
 798 02a2 0A       		.uleb128 0xa
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 31


 799 02a3 4C000000 		.4byte	.LVL14
 800 02a7 DE010000 		.4byte	0x1de
 801 02ab 00       		.byte	0
 802 02ac 0B       		.uleb128 0xb
 803 02ad EA000000 		.4byte	.LASF33
 804 02b1 01       		.byte	0x1
 805 02b2 37       		.byte	0x37
 806 02b3 00000000 		.4byte	.LFB0
 807 02b7 18000000 		.4byte	.LFE0-.LFB0
 808 02bb 01       		.uleb128 0x1
 809 02bc 9C       		.byte	0x9c
 810 02bd CB020000 		.4byte	0x2cb
 811 02c1 0A       		.uleb128 0xa
 812 02c2 0C000000 		.4byte	.LVL15
 813 02c6 07020000 		.4byte	0x207
 814 02ca 00       		.byte	0
 815 02cb 09       		.uleb128 0x9
 816 02cc 95020000 		.4byte	.LASF34
 817 02d0 01       		.byte	0x1
 818 02d1 4A03     		.2byte	0x34a
 819 02d3 77000000 		.4byte	0x77
 820 02d7 00000000 		.4byte	.LFB13
 821 02db 0C000000 		.4byte	.LFE13-.LFB13
 822 02df 01       		.uleb128 0x1
 823 02e0 9C       		.byte	0x9c
 824 02e1 09       		.uleb128 0x9
 825 02e2 82000000 		.4byte	.LASF35
 826 02e6 01       		.byte	0x1
 827 02e7 5E03     		.2byte	0x35e
 828 02e9 77000000 		.4byte	0x77
 829 02ed 00000000 		.4byte	.LFB14
 830 02f1 0C000000 		.4byte	.LFE14-.LFB14
 831 02f5 01       		.uleb128 0x1
 832 02f6 9C       		.byte	0x9c
 833 02f7 09       		.uleb128 0x9
 834 02f8 74010000 		.4byte	.LASF36
 835 02fc 01       		.byte	0x1
 836 02fd 7403     		.2byte	0x374
 837 02ff 77000000 		.4byte	0x77
 838 0303 00000000 		.4byte	.LFB15
 839 0307 0C000000 		.4byte	.LFE15-.LFB15
 840 030b 01       		.uleb128 0x1
 841 030c 9C       		.byte	0x9c
 842 030d 0F       		.uleb128 0xf
 843 030e 55000000 		.4byte	.LASF41
 844 0312 01       		.byte	0x1
 845 0313 20       		.byte	0x20
 846 0314 6B000000 		.4byte	0x6b
 847 0318 05       		.uleb128 0x5
 848 0319 03       		.byte	0x3
 849 031a 00000000 		.4byte	US_40kHz_initVar
 850 031e 10       		.uleb128 0x10
 851 031f 5B020000 		.4byte	.LASF42
 852 0323 03       		.byte	0x3
 853 0324 7D       		.byte	0x7d
 854 0325 6B000000 		.4byte	0x6b
 855 0329 11       		.uleb128 0x11
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 32


 856 032a 7F020000 		.4byte	.LASF43
 857 032e 03       		.byte	0x3
 858 032f 7E       		.byte	0x7e
 859 0330 12       		.uleb128 0x12
 860 0331 6B000000 		.4byte	0x6b
 861 0335 00       		.byte	0
 862 0336 00       		.byte	0
 863              		.section	.debug_abbrev,"",%progbits
 864              	.Ldebug_abbrev0:
 865 0000 01       		.uleb128 0x1
 866 0001 11       		.uleb128 0x11
 867 0002 01       		.byte	0x1
 868 0003 25       		.uleb128 0x25
 869 0004 0E       		.uleb128 0xe
 870 0005 13       		.uleb128 0x13
 871 0006 0B       		.uleb128 0xb
 872 0007 03       		.uleb128 0x3
 873 0008 0E       		.uleb128 0xe
 874 0009 1B       		.uleb128 0x1b
 875 000a 0E       		.uleb128 0xe
 876 000b 55       		.uleb128 0x55
 877 000c 17       		.uleb128 0x17
 878 000d 11       		.uleb128 0x11
 879 000e 01       		.uleb128 0x1
 880 000f 10       		.uleb128 0x10
 881 0010 17       		.uleb128 0x17
 882 0011 00       		.byte	0
 883 0012 00       		.byte	0
 884 0013 02       		.uleb128 0x2
 885 0014 24       		.uleb128 0x24
 886 0015 00       		.byte	0
 887 0016 0B       		.uleb128 0xb
 888 0017 0B       		.uleb128 0xb
 889 0018 3E       		.uleb128 0x3e
 890 0019 0B       		.uleb128 0xb
 891 001a 03       		.uleb128 0x3
 892 001b 0E       		.uleb128 0xe
 893 001c 00       		.byte	0
 894 001d 00       		.byte	0
 895 001e 03       		.uleb128 0x3
 896 001f 24       		.uleb128 0x24
 897 0020 00       		.byte	0
 898 0021 0B       		.uleb128 0xb
 899 0022 0B       		.uleb128 0xb
 900 0023 3E       		.uleb128 0x3e
 901 0024 0B       		.uleb128 0xb
 902 0025 03       		.uleb128 0x3
 903 0026 08       		.uleb128 0x8
 904 0027 00       		.byte	0
 905 0028 00       		.byte	0
 906 0029 04       		.uleb128 0x4
 907 002a 16       		.uleb128 0x16
 908 002b 00       		.byte	0
 909 002c 03       		.uleb128 0x3
 910 002d 0E       		.uleb128 0xe
 911 002e 3A       		.uleb128 0x3a
 912 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 33


 913 0030 3B       		.uleb128 0x3b
 914 0031 05       		.uleb128 0x5
 915 0032 49       		.uleb128 0x49
 916 0033 13       		.uleb128 0x13
 917 0034 00       		.byte	0
 918 0035 00       		.byte	0
 919 0036 05       		.uleb128 0x5
 920 0037 35       		.uleb128 0x35
 921 0038 00       		.byte	0
 922 0039 49       		.uleb128 0x49
 923 003a 13       		.uleb128 0x13
 924 003b 00       		.byte	0
 925 003c 00       		.byte	0
 926 003d 06       		.uleb128 0x6
 927 003e 2E       		.uleb128 0x2e
 928 003f 00       		.byte	0
 929 0040 3F       		.uleb128 0x3f
 930 0041 19       		.uleb128 0x19
 931 0042 03       		.uleb128 0x3
 932 0043 0E       		.uleb128 0xe
 933 0044 3A       		.uleb128 0x3a
 934 0045 0B       		.uleb128 0xb
 935 0046 3B       		.uleb128 0x3b
 936 0047 0B       		.uleb128 0xb
 937 0048 27       		.uleb128 0x27
 938 0049 19       		.uleb128 0x19
 939 004a 11       		.uleb128 0x11
 940 004b 01       		.uleb128 0x1
 941 004c 12       		.uleb128 0x12
 942 004d 06       		.uleb128 0x6
 943 004e 40       		.uleb128 0x40
 944 004f 18       		.uleb128 0x18
 945 0050 9742     		.uleb128 0x2117
 946 0052 19       		.uleb128 0x19
 947 0053 00       		.byte	0
 948 0054 00       		.byte	0
 949 0055 07       		.uleb128 0x7
 950 0056 2E       		.uleb128 0x2e
 951 0057 01       		.byte	0x1
 952 0058 3F       		.uleb128 0x3f
 953 0059 19       		.uleb128 0x19
 954 005a 03       		.uleb128 0x3
 955 005b 0E       		.uleb128 0xe
 956 005c 3A       		.uleb128 0x3a
 957 005d 0B       		.uleb128 0xb
 958 005e 3B       		.uleb128 0x3b
 959 005f 05       		.uleb128 0x5
 960 0060 27       		.uleb128 0x27
 961 0061 19       		.uleb128 0x19
 962 0062 11       		.uleb128 0x11
 963 0063 01       		.uleb128 0x1
 964 0064 12       		.uleb128 0x12
 965 0065 06       		.uleb128 0x6
 966 0066 40       		.uleb128 0x40
 967 0067 18       		.uleb128 0x18
 968 0068 9742     		.uleb128 0x2117
 969 006a 19       		.uleb128 0x19
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 34


 970 006b 01       		.uleb128 0x1
 971 006c 13       		.uleb128 0x13
 972 006d 00       		.byte	0
 973 006e 00       		.byte	0
 974 006f 08       		.uleb128 0x8
 975 0070 05       		.uleb128 0x5
 976 0071 00       		.byte	0
 977 0072 03       		.uleb128 0x3
 978 0073 0E       		.uleb128 0xe
 979 0074 3A       		.uleb128 0x3a
 980 0075 0B       		.uleb128 0xb
 981 0076 3B       		.uleb128 0x3b
 982 0077 05       		.uleb128 0x5
 983 0078 49       		.uleb128 0x49
 984 0079 13       		.uleb128 0x13
 985 007a 02       		.uleb128 0x2
 986 007b 18       		.uleb128 0x18
 987 007c 00       		.byte	0
 988 007d 00       		.byte	0
 989 007e 09       		.uleb128 0x9
 990 007f 2E       		.uleb128 0x2e
 991 0080 00       		.byte	0
 992 0081 3F       		.uleb128 0x3f
 993 0082 19       		.uleb128 0x19
 994 0083 03       		.uleb128 0x3
 995 0084 0E       		.uleb128 0xe
 996 0085 3A       		.uleb128 0x3a
 997 0086 0B       		.uleb128 0xb
 998 0087 3B       		.uleb128 0x3b
 999 0088 05       		.uleb128 0x5
 1000 0089 27       		.uleb128 0x27
 1001 008a 19       		.uleb128 0x19
 1002 008b 49       		.uleb128 0x49
 1003 008c 13       		.uleb128 0x13
 1004 008d 11       		.uleb128 0x11
 1005 008e 01       		.uleb128 0x1
 1006 008f 12       		.uleb128 0x12
 1007 0090 06       		.uleb128 0x6
 1008 0091 40       		.uleb128 0x40
 1009 0092 18       		.uleb128 0x18
 1010 0093 9742     		.uleb128 0x2117
 1011 0095 19       		.uleb128 0x19
 1012 0096 00       		.byte	0
 1013 0097 00       		.byte	0
 1014 0098 0A       		.uleb128 0xa
 1015 0099 898201   		.uleb128 0x4109
 1016 009c 00       		.byte	0
 1017 009d 11       		.uleb128 0x11
 1018 009e 01       		.uleb128 0x1
 1019 009f 31       		.uleb128 0x31
 1020 00a0 13       		.uleb128 0x13
 1021 00a1 00       		.byte	0
 1022 00a2 00       		.byte	0
 1023 00a3 0B       		.uleb128 0xb
 1024 00a4 2E       		.uleb128 0x2e
 1025 00a5 01       		.byte	0x1
 1026 00a6 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 35


 1027 00a7 19       		.uleb128 0x19
 1028 00a8 03       		.uleb128 0x3
 1029 00a9 0E       		.uleb128 0xe
 1030 00aa 3A       		.uleb128 0x3a
 1031 00ab 0B       		.uleb128 0xb
 1032 00ac 3B       		.uleb128 0x3b
 1033 00ad 0B       		.uleb128 0xb
 1034 00ae 27       		.uleb128 0x27
 1035 00af 19       		.uleb128 0x19
 1036 00b0 11       		.uleb128 0x11
 1037 00b1 01       		.uleb128 0x1
 1038 00b2 12       		.uleb128 0x12
 1039 00b3 06       		.uleb128 0x6
 1040 00b4 40       		.uleb128 0x40
 1041 00b5 18       		.uleb128 0x18
 1042 00b6 9742     		.uleb128 0x2117
 1043 00b8 19       		.uleb128 0x19
 1044 00b9 01       		.uleb128 0x1
 1045 00ba 13       		.uleb128 0x13
 1046 00bb 00       		.byte	0
 1047 00bc 00       		.byte	0
 1048 00bd 0C       		.uleb128 0xc
 1049 00be 34       		.uleb128 0x34
 1050 00bf 00       		.byte	0
 1051 00c0 03       		.uleb128 0x3
 1052 00c1 0E       		.uleb128 0xe
 1053 00c2 3A       		.uleb128 0x3a
 1054 00c3 0B       		.uleb128 0xb
 1055 00c4 3B       		.uleb128 0x3b
 1056 00c5 0B       		.uleb128 0xb
 1057 00c6 49       		.uleb128 0x49
 1058 00c7 13       		.uleb128 0x13
 1059 00c8 02       		.uleb128 0x2
 1060 00c9 17       		.uleb128 0x17
 1061 00ca 00       		.byte	0
 1062 00cb 00       		.byte	0
 1063 00cc 0D       		.uleb128 0xd
 1064 00cd 898201   		.uleb128 0x4109
 1065 00d0 01       		.byte	0x1
 1066 00d1 11       		.uleb128 0x11
 1067 00d2 01       		.uleb128 0x1
 1068 00d3 31       		.uleb128 0x31
 1069 00d4 13       		.uleb128 0x13
 1070 00d5 01       		.uleb128 0x1
 1071 00d6 13       		.uleb128 0x13
 1072 00d7 00       		.byte	0
 1073 00d8 00       		.byte	0
 1074 00d9 0E       		.uleb128 0xe
 1075 00da 8A8201   		.uleb128 0x410a
 1076 00dd 00       		.byte	0
 1077 00de 02       		.uleb128 0x2
 1078 00df 18       		.uleb128 0x18
 1079 00e0 9142     		.uleb128 0x2111
 1080 00e2 18       		.uleb128 0x18
 1081 00e3 00       		.byte	0
 1082 00e4 00       		.byte	0
 1083 00e5 0F       		.uleb128 0xf
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 36


 1084 00e6 34       		.uleb128 0x34
 1085 00e7 00       		.byte	0
 1086 00e8 03       		.uleb128 0x3
 1087 00e9 0E       		.uleb128 0xe
 1088 00ea 3A       		.uleb128 0x3a
 1089 00eb 0B       		.uleb128 0xb
 1090 00ec 3B       		.uleb128 0x3b
 1091 00ed 0B       		.uleb128 0xb
 1092 00ee 49       		.uleb128 0x49
 1093 00ef 13       		.uleb128 0x13
 1094 00f0 3F       		.uleb128 0x3f
 1095 00f1 19       		.uleb128 0x19
 1096 00f2 02       		.uleb128 0x2
 1097 00f3 18       		.uleb128 0x18
 1098 00f4 00       		.byte	0
 1099 00f5 00       		.byte	0
 1100 00f6 10       		.uleb128 0x10
 1101 00f7 2E       		.uleb128 0x2e
 1102 00f8 00       		.byte	0
 1103 00f9 3F       		.uleb128 0x3f
 1104 00fa 19       		.uleb128 0x19
 1105 00fb 03       		.uleb128 0x3
 1106 00fc 0E       		.uleb128 0xe
 1107 00fd 3A       		.uleb128 0x3a
 1108 00fe 0B       		.uleb128 0xb
 1109 00ff 3B       		.uleb128 0x3b
 1110 0100 0B       		.uleb128 0xb
 1111 0101 27       		.uleb128 0x27
 1112 0102 19       		.uleb128 0x19
 1113 0103 49       		.uleb128 0x49
 1114 0104 13       		.uleb128 0x13
 1115 0105 3C       		.uleb128 0x3c
 1116 0106 19       		.uleb128 0x19
 1117 0107 00       		.byte	0
 1118 0108 00       		.byte	0
 1119 0109 11       		.uleb128 0x11
 1120 010a 2E       		.uleb128 0x2e
 1121 010b 01       		.byte	0x1
 1122 010c 3F       		.uleb128 0x3f
 1123 010d 19       		.uleb128 0x19
 1124 010e 03       		.uleb128 0x3
 1125 010f 0E       		.uleb128 0xe
 1126 0110 3A       		.uleb128 0x3a
 1127 0111 0B       		.uleb128 0xb
 1128 0112 3B       		.uleb128 0x3b
 1129 0113 0B       		.uleb128 0xb
 1130 0114 27       		.uleb128 0x27
 1131 0115 19       		.uleb128 0x19
 1132 0116 3C       		.uleb128 0x3c
 1133 0117 19       		.uleb128 0x19
 1134 0118 00       		.byte	0
 1135 0119 00       		.byte	0
 1136 011a 12       		.uleb128 0x12
 1137 011b 05       		.uleb128 0x5
 1138 011c 00       		.byte	0
 1139 011d 49       		.uleb128 0x49
 1140 011e 13       		.uleb128 0x13
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 37


 1141 011f 00       		.byte	0
 1142 0120 00       		.byte	0
 1143 0121 00       		.byte	0
 1144              		.section	.debug_loc,"",%progbits
 1145              	.Ldebug_loc0:
 1146              	.LLST0:
 1147 0000 3C000000 		.4byte	.LVL12
 1148 0004 47000000 		.4byte	.LVL13-1
 1149 0008 0100     		.2byte	0x1
 1150 000a 50       		.byte	0x50
 1151 000b 00000000 		.4byte	0
 1152 000f 00000000 		.4byte	0
 1153              		.section	.debug_aranges,"",%progbits
 1154 0000 94000000 		.4byte	0x94
 1155 0004 0200     		.2byte	0x2
 1156 0006 00000000 		.4byte	.Ldebug_info0
 1157 000a 04       		.byte	0x4
 1158 000b 00       		.byte	0
 1159 000c 0000     		.2byte	0
 1160 000e 0000     		.2byte	0
 1161 0010 00000000 		.4byte	.LFB2
 1162 0014 02000000 		.4byte	.LFE2-.LFB2
 1163 0018 00000000 		.4byte	.LFB3
 1164 001c 02000000 		.4byte	.LFE3-.LFB3
 1165 0020 00000000 		.4byte	.LFB4
 1166 0024 0C000000 		.4byte	.LFE4-.LFB4
 1167 0028 00000000 		.4byte	.LFB5
 1168 002c 14000000 		.4byte	.LFE5-.LFB5
 1169 0030 00000000 		.4byte	.LFB7
 1170 0034 0C000000 		.4byte	.LFE7-.LFB7
 1171 0038 00000000 		.4byte	.LFB8
 1172 003c 0C000000 		.4byte	.LFE8-.LFB8
 1173 0040 00000000 		.4byte	.LFB9
 1174 0044 0C000000 		.4byte	.LFE9-.LFB9
 1175 0048 00000000 		.4byte	.LFB10
 1176 004c 0C000000 		.4byte	.LFE10-.LFB10
 1177 0050 00000000 		.4byte	.LFB11
 1178 0054 0C000000 		.4byte	.LFE11-.LFB11
 1179 0058 00000000 		.4byte	.LFB12
 1180 005c 0C000000 		.4byte	.LFE12-.LFB12
 1181 0060 00000000 		.4byte	.LFB6
 1182 0064 14000000 		.4byte	.LFE6-.LFB6
 1183 0068 00000000 		.4byte	.LFB1
 1184 006c 58000000 		.4byte	.LFE1-.LFB1
 1185 0070 00000000 		.4byte	.LFB0
 1186 0074 18000000 		.4byte	.LFE0-.LFB0
 1187 0078 00000000 		.4byte	.LFB13
 1188 007c 0C000000 		.4byte	.LFE13-.LFB13
 1189 0080 00000000 		.4byte	.LFB14
 1190 0084 0C000000 		.4byte	.LFE14-.LFB14
 1191 0088 00000000 		.4byte	.LFB15
 1192 008c 0C000000 		.4byte	.LFE15-.LFB15
 1193 0090 00000000 		.4byte	0
 1194 0094 00000000 		.4byte	0
 1195              		.section	.debug_ranges,"",%progbits
 1196              	.Ldebug_ranges0:
 1197 0000 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 38


 1198 0004 02000000 		.4byte	.LFE2
 1199 0008 00000000 		.4byte	.LFB3
 1200 000c 02000000 		.4byte	.LFE3
 1201 0010 00000000 		.4byte	.LFB4
 1202 0014 0C000000 		.4byte	.LFE4
 1203 0018 00000000 		.4byte	.LFB5
 1204 001c 14000000 		.4byte	.LFE5
 1205 0020 00000000 		.4byte	.LFB7
 1206 0024 0C000000 		.4byte	.LFE7
 1207 0028 00000000 		.4byte	.LFB8
 1208 002c 0C000000 		.4byte	.LFE8
 1209 0030 00000000 		.4byte	.LFB9
 1210 0034 0C000000 		.4byte	.LFE9
 1211 0038 00000000 		.4byte	.LFB10
 1212 003c 0C000000 		.4byte	.LFE10
 1213 0040 00000000 		.4byte	.LFB11
 1214 0044 0C000000 		.4byte	.LFE11
 1215 0048 00000000 		.4byte	.LFB12
 1216 004c 0C000000 		.4byte	.LFE12
 1217 0050 00000000 		.4byte	.LFB6
 1218 0054 14000000 		.4byte	.LFE6
 1219 0058 00000000 		.4byte	.LFB1
 1220 005c 58000000 		.4byte	.LFE1
 1221 0060 00000000 		.4byte	.LFB0
 1222 0064 18000000 		.4byte	.LFE0
 1223 0068 00000000 		.4byte	.LFB13
 1224 006c 0C000000 		.4byte	.LFE13
 1225 0070 00000000 		.4byte	.LFB14
 1226 0074 0C000000 		.4byte	.LFE14
 1227 0078 00000000 		.4byte	.LFB15
 1228 007c 0C000000 		.4byte	.LFE15
 1229 0080 00000000 		.4byte	0
 1230 0084 00000000 		.4byte	0
 1231              		.section	.debug_line,"",%progbits
 1232              	.Ldebug_line0:
 1233 0000 7F010000 		.section	.debug_str,"MS",%progbits,1
 1233      02005000 
 1233      00000201 
 1233      FB0E0D00 
 1233      01010101 
 1234              	.LASF15:
 1235 0000 72656731 		.ascii	"reg16\000"
 1235      3600
 1236              	.LASF23:
 1237 0006 55535F34 		.ascii	"US_40kHz_WriteCompare1\000"
 1237      306B487A 
 1237      5F577269 
 1237      7465436F 
 1237      6D706172 
 1238              	.LASF38:
 1239 001d 47656E65 		.ascii	"Generated_Source\\PSoC5\\US_40kHz.c\000"
 1239      72617465 
 1239      645F536F 
 1239      75726365 
 1239      5C50536F 
 1240              	.LASF19:
 1241 003f 55535F34 		.ascii	"US_40kHz_WriteCounter\000"
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 39


 1241      306B487A 
 1241      5F577269 
 1241      7465436F 
 1241      756E7465 
 1242              	.LASF41:
 1243 0055 55535F34 		.ascii	"US_40kHz_initVar\000"
 1243      306B487A 
 1243      5F696E69 
 1243      74566172 
 1243      00
 1244              	.LASF28:
 1245 0066 55535F34 		.ascii	"US_40kHz_ReadCounter\000"
 1245      306B487A 
 1245      5F526561 
 1245      64436F75 
 1245      6E746572 
 1246              	.LASF22:
 1247 007b 70657269 		.ascii	"period\000"
 1247      6F6400
 1248              	.LASF35:
 1249 0082 55535F34 		.ascii	"US_40kHz_ReadCompare2\000"
 1249      306B487A 
 1249      5F526561 
 1249      64436F6D 
 1249      70617265 
 1250              	.LASF3:
 1251 0098 73686F72 		.ascii	"short unsigned int\000"
 1251      7420756E 
 1251      7369676E 
 1251      65642069 
 1251      6E7400
 1252              	.LASF26:
 1253 00ab 55535F34 		.ascii	"US_40kHz_SetInterruptMode\000"
 1253      306B487A 
 1253      5F536574 
 1253      496E7465 
 1253      72727570 
 1254              	.LASF25:
 1255 00c5 55535F34 		.ascii	"US_40kHz_WriteCompare2\000"
 1255      306B487A 
 1255      5F577269 
 1255      7465436F 
 1255      6D706172 
 1256              	.LASF32:
 1257 00dc 55535F34 		.ascii	"US_40kHz_Init\000"
 1257      306B487A 
 1257      5F496E69 
 1257      7400
 1258              	.LASF33:
 1259 00ea 55535F34 		.ascii	"US_40kHz_Start\000"
 1259      306B487A 
 1259      5F537461 
 1259      727400
 1260              	.LASF18:
 1261 00f9 55535F34 		.ascii	"US_40kHz_Stop\000"
 1261      306B487A 
 1261      5F53746F 
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 40


 1261      7000
 1262              	.LASF11:
 1263 0107 666C6F61 		.ascii	"float\000"
 1263      7400
 1264              	.LASF21:
 1265 010d 636F756E 		.ascii	"counter\000"
 1265      74657200 
 1266              	.LASF7:
 1267 0115 6C6F6E67 		.ascii	"long long unsigned int\000"
 1267      206C6F6E 
 1267      6720756E 
 1267      7369676E 
 1267      65642069 
 1268              	.LASF1:
 1269 012c 756E7369 		.ascii	"unsigned char\000"
 1269      676E6564 
 1269      20636861 
 1269      7200
 1270              	.LASF40:
 1271 013a 55535F34 		.ascii	"US_40kHz_interruptState\000"
 1271      306B487A 
 1271      5F696E74 
 1271      65727275 
 1271      70745374 
 1272              	.LASF17:
 1273 0152 55535F34 		.ascii	"US_40kHz_Enable\000"
 1273      306B487A 
 1273      5F456E61 
 1273      626C6500 
 1274              	.LASF5:
 1275 0162 6C6F6E67 		.ascii	"long unsigned int\000"
 1275      20756E73 
 1275      69676E65 
 1275      6420696E 
 1275      7400
 1276              	.LASF36:
 1277 0174 55535F34 		.ascii	"US_40kHz_ReadPeriod\000"
 1277      306B487A 
 1277      5F526561 
 1277      64506572 
 1277      696F6400 
 1278              	.LASF9:
 1279 0188 75696E74 		.ascii	"uint8\000"
 1279      3800
 1280              	.LASF29:
 1281 018e 55535F34 		.ascii	"US_40kHz_ReadStatusRegister\000"
 1281      306B487A 
 1281      5F526561 
 1281      64537461 
 1281      74757352 
 1282              	.LASF20:
 1283 01aa 55535F34 		.ascii	"US_40kHz_WritePeriod\000"
 1283      306B487A 
 1283      5F577269 
 1283      74655065 
 1283      72696F64 
 1284              	.LASF12:
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 41


 1285 01bf 646F7562 		.ascii	"double\000"
 1285      6C6500
 1286              	.LASF10:
 1287 01c6 75696E74 		.ascii	"uint16\000"
 1287      313600
 1288              	.LASF37:
 1289 01cd 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1289      4320342E 
 1289      392E3320 
 1289      32303135 
 1289      30333033 
 1290 0200 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1290      20726576 
 1290      6973696F 
 1290      6E203232 
 1290      31323230 
 1291 0233 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1291      66756E63 
 1291      74696F6E 
 1291      2D736563 
 1291      74696F6E 
 1292              	.LASF42:
 1293 025b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1293      74657243 
 1293      72697469 
 1293      63616C53 
 1293      65637469 
 1294              	.LASF8:
 1295 0272 756E7369 		.ascii	"unsigned int\000"
 1295      676E6564 
 1295      20696E74 
 1295      00
 1296              	.LASF43:
 1297 027f 43794578 		.ascii	"CyExitCriticalSection\000"
 1297      69744372 
 1297      69746963 
 1297      616C5365 
 1297      6374696F 
 1298              	.LASF34:
 1299 0295 55535F34 		.ascii	"US_40kHz_ReadCompare1\000"
 1299      306B487A 
 1299      5F526561 
 1299      64436F6D 
 1299      70617265 
 1300              	.LASF31:
 1301 02ab 55535F34 		.ascii	"US_40kHz_ClearFIFO\000"
 1301      306B487A 
 1301      5F436C65 
 1301      61724649 
 1301      464F00
 1302              	.LASF39:
 1303 02be 433A5C55 		.ascii	"C:\\Users\\Julien\\Documents\\INSA\\5A\\BE_systemes"
 1303      73657273 
 1303      5C4A756C 
 1303      69656E5C 
 1303      446F6375 
 1304 02eb 5F656D62 		.ascii	"_embarques\\BE_systemes_embarques\\capteur_us.cydsn"
ARM GAS  C:\Users\Julien\AppData\Local\Temp\cc8dl6Sd.s 			page 42


 1304      61727175 
 1304      65735C42 
 1304      455F7379 
 1304      7374656D 
 1305 031c 00       		.ascii	"\000"
 1306              	.LASF14:
 1307 031d 72656738 		.ascii	"reg8\000"
 1307      00
 1308              	.LASF16:
 1309 0322 73697A65 		.ascii	"sizetype\000"
 1309      74797065 
 1309      00
 1310              	.LASF6:
 1311 032b 6C6F6E67 		.ascii	"long long int\000"
 1311      206C6F6E 
 1311      6720696E 
 1311      7400
 1312              	.LASF27:
 1313 0339 696E7465 		.ascii	"interruptMode\000"
 1313      72727570 
 1313      744D6F64 
 1313      6500
 1314              	.LASF2:
 1315 0347 73686F72 		.ascii	"short int\000"
 1315      7420696E 
 1315      7400
 1316              	.LASF4:
 1317 0351 6C6F6E67 		.ascii	"long int\000"
 1317      20696E74 
 1317      00
 1318              	.LASF13:
 1319 035a 63686172 		.ascii	"char\000"
 1319      00
 1320              	.LASF0:
 1321 035f 7369676E 		.ascii	"signed char\000"
 1321      65642063 
 1321      68617200 
 1322              	.LASF24:
 1323 036b 636F6D70 		.ascii	"compare\000"
 1323      61726500 
 1324              	.LASF30:
 1325 0373 55535F34 		.ascii	"US_40kHz_ReadCapture\000"
 1325      306B487A 
 1325      5F526561 
 1325      64436170 
 1325      74757265 
 1326              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
